{"ast":null,"code":"var _jsxFileName = \"/Users/tenzy/Documents/work/vata-hackathon-fe/atva/src/components/Body/components/SideBar/index.js\";\nimport React, { Component } from \"react\";\nimport cx from 'classnames';\nimport { withRouter } from \"react-router-dom\";\nimport { documentUrl } from \"../../../../utils\";\nimport { createDocument } from \"../../../../utils/fetch\";\nimport withToast from \"../../../Toast\";\nimport \"./style.css\";\n\nclass SideBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getDocumentUrl = () => {\n      const href = window.location.href;\n      return href;\n    };\n\n    this.getUrlBoxRef = ref => {\n      if (ref) {\n        this.urlBoxRef = ref;\n      }\n    };\n\n    this.handleChangeTitle = e => {\n      const title = e.target.value;\n      this.props.onChangeDocumentTitle(title);\n    };\n\n    this.handleCopyButton = () => {\n      if (this.urlBoxRef) {\n        this.urlBoxRef.select();\n        document.execCommand(\"copy\");\n        this.props.showToast();\n      }\n    };\n\n    this.handleStartRecording = () => {\n      const _this$props = this.props,\n            documentId = _this$props.documentId,\n            documentTitle = _this$props.documentTitle;\n\n      if (documentId) {\n        this.props.onStartRecording();\n      } else if (documentTitle) {\n        createDocument(documentTitle).then(data => {\n          console.log(\"Start Recording...\");\n          const dochash = data && data.doc_hash;\n\n          if (dochash) {\n            // const documentHash = dochash;\n            this.props.setDocumentId(dochash);\n            this.props.onStartRecording(); // this.props.history.push(documentUrl(documentHash));\n          } else {\n            alert(\"Document cannot be created\");\n          }\n        });\n      } else {\n        alert(\"Please write the document's name before starting!\");\n      }\n    };\n\n    this.handleRecordNext = () => {\n      console.log(\"Recording Next Section...\");\n      this.props.handleRecordNext();\n    };\n\n    this.handleStopRecording = () => {\n      console.log(\"Stop Recording...\");\n      this.props.onStopRecording();\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          documentTitle = _this$props2.documentTitle,\n          isRecording = _this$props2.isRecording;\n    return React.createElement(\"div\", {\n      className: \"sidebar-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Meeting Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"sidebar-input-box\",\n      value: documentTitle,\n      placeholder: \"Type meeting topic here\",\n      onChange: this.handleChangeTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sidebar-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Share\"), React.createElement(\"div\", {\n      className: \"sidebar-url-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"sidebar-link-box\",\n      readOnly: true,\n      value: this.getDocumentUrl(),\n      ref: this.getUrlBoxRef,\n      onClick: this.handleCopyButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"sidebar-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button sidebar-start-button\",\n      onClick: isRecording ? this.handleRecordNext : this.handleStartRecording,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, isRecording ? \"Record Next Section\" : \"Start Recording\")), React.createElement(\"div\", {\n      className: \"sidebar-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: cx(\"button-red sidebar-start-button\", {\n        \"button-disabled\": !isRecording\n      }),\n      onClick: this.handleStopRecording,\n      disabled: !isRecording,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Stop Recording\")))));\n  }\n\n}\n\nexport default withToast(withRouter(SideBar), \"Url Copied to Clipboard!\");","map":{"version":3,"sources":["/Users/tenzy/Documents/work/vata-hackathon-fe/atva/src/components/Body/components/SideBar/index.js"],"names":["React","Component","cx","withRouter","documentUrl","createDocument","withToast","SideBar","getDocumentUrl","href","window","location","getUrlBoxRef","ref","urlBoxRef","handleChangeTitle","e","title","target","value","props","onChangeDocumentTitle","handleCopyButton","select","document","execCommand","showToast","handleStartRecording","documentId","documentTitle","onStartRecording","then","data","console","log","dochash","doc_hash","setDocumentId","alert","handleRecordNext","handleStopRecording","onStopRecording","render","isRecording"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport cx from 'classnames';\nimport { withRouter } from \"react-router-dom\";\n\nimport { documentUrl } from \"../../../../utils\";\nimport { createDocument } from \"../../../../utils/fetch\";\n\nimport withToast from \"../../../Toast\";\n\nimport \"./style.css\";\n\nclass SideBar extends Component {\n  urlBoxRef;\n\n  getDocumentUrl = () => {\n    const href = window.location.href;\n\n    return href;\n  };\n\n  getUrlBoxRef = ref => {\n    if (ref) {\n      this.urlBoxRef = ref;\n    }\n  };\n\n  handleChangeTitle = e => {\n    const title = e.target.value;\n\n    this.props.onChangeDocumentTitle(title);\n  };\n\n  handleCopyButton = () => {\n    if (this.urlBoxRef) {\n      this.urlBoxRef.select();\n      document.execCommand(\"copy\");\n      this.props.showToast();\n    }\n  };\n\n  handleStartRecording = () => {\n    const { documentId, documentTitle } = this.props;\n    if (documentId) {\n      this.props.onStartRecording();\n    } else if (documentTitle) {\n      createDocument(documentTitle).then(data => {\n        console.log(\"Start Recording...\");\n        const dochash = data && data.doc_hash;\n        if (dochash) {\n          // const documentHash = dochash;\n          this.props.setDocumentId(dochash);\n          this.props.onStartRecording();\n          // this.props.history.push(documentUrl(documentHash));\n        } else {\n          alert(\"Document cannot be created\");\n        }\n      });\n    } else {\n      alert(\"Please write the document's name before starting!\");\n    }\n  };\n\n  handleRecordNext = () => {\n    console.log(\"Recording Next Section...\");\n    this.props.handleRecordNext();\n  };\n\n  handleStopRecording = () => {\n    console.log(\"Stop Recording...\");\n    this.props.onStopRecording();\n  };\n\n  render() {\n    const { documentTitle, isRecording } = this.props;\n\n    return (\n      <div className=\"sidebar-container\">\n        <div className=\"sidebar\">\n          <div>\n            <div className=\"sidebar-section\">\n              <div className=\"sidebar-label\">Meeting Title</div>\n              <input\n                type=\"text\"\n                className=\"sidebar-input-box\"\n                value={documentTitle}\n                placeholder=\"Type meeting topic here\"\n                onChange={this.handleChangeTitle}\n              />\n            </div>\n            <div className=\"sidebar-section\">\n              <div className=\"sidebar-label\">Share</div>\n              <div className=\"sidebar-url-container\">\n                <input\n                  type=\"text\"\n                  className=\"sidebar-link-box\"\n                  readOnly\n                  value={this.getDocumentUrl()}\n                  ref={this.getUrlBoxRef}\n                  onClick={this.handleCopyButton}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"sidebar-buttons\">\n            <div className=\"sidebar-section\">\n              <button\n                className=\"button sidebar-start-button\"\n                onClick={\n                  isRecording\n                    ? this.handleRecordNext\n                    : this.handleStartRecording\n                }\n              >\n                {isRecording ? \"Record Next Section\" : \"Start Recording\"}\n              </button>\n            </div>\n            <div className=\"sidebar-section\">\n              <button\n                className={cx(\"button-red sidebar-start-button\", {\n                  \"button-disabled\": !isRecording\n                })}\n                onClick={this.handleStopRecording}\n                disabled={!isRecording}\n              >\n                Stop Recording\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withToast(withRouter(SideBar), \"Url Copied to Clipboard!\");\n"]},"metadata":{},"sourceType":"module"}