{"ast":null,"code":"/*\n  Rule templates that provide metadata for generating transformation rules\n  Copyright (C) 2017 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar ruleTemplates = {\n  // Predicates as used in the English rules in data/English/tr_from_posjs.txt\n  \"NEXT-TAG\": {\n    // maps to the predicate function\n    \"function\": next_tag_is,\n    // Minimum required space before or after current position to be a relevant predicate\n    \"window\": [0, 1],\n    // The number of parameters the predicate takes\n    \"nrParameters\": 1,\n    // Function that returns relevant values for parameter 1\n    \"parameter1Values\": nextTagParameterValues\n  },\n  \"NEXT-WORD-IS-CAP\": {\n    \"function\": next_word_is_cap,\n    \"window\": [0, 1],\n    \"nrParameters\": 0\n  },\n  \"PREV-1-OR-2-OR-3-TAG\": {\n    \"function\": prev_1_or_2_or_3_tag,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prev1Or2Or3TagParameterValues\n  },\n  \"PREV-1-OR-2-TAG\": {\n    \"function\": prev_1_or_2_tag,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prev1Or2TagParameterValues\n  },\n  \"NEXT-WORD-IS-TAG\": {\n    \"function\": next_tag_is,\n    \"window\": [0, 1],\n    \"nrParameters\": 1,\n    \"parameter1Values\": nextTagParameterValues\n  },\n  \"PREV-TAG\": {\n    \"function\": prev_tag_is,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prevTagParameterValues\n  },\n\n  /*\n  \"CURRENT-WORD-IS-TAG\": {\n   \"function\": current_word_is_tag,\n   \"window\": [0],\n   \"nrParameter\": 1,\n   \"parameter1Values\": currentTagParameterValues\n   },\n  */\n  \"PREV-WORD-IS-CAP\": {\n    \"function\": prev_word_is_cap,\n    \"window\": [-1, 0],\n    \"nrParameters\": 0\n  },\n  \"CURRENT-WORD-IS-CAP\": {\n    \"function\": current_word_is_cap,\n    \"window\": [0, 0],\n    \"nrParameters\": 0\n  },\n  \"CURRENT-WORD-IS-NUMBER\": {\n    \"function\": current_word_is_number,\n    \"window\": [0, 0],\n    \"nrParameters\": 0\n  },\n  \"CURRENT-WORD-IS-URL\": {\n    \"function\": current_word_is_url,\n    \"window\": [0, 0],\n    \"nrParameters\": 0\n  },\n  \"CURRENT-WORD-ENDS-WITH\": {\n    \"function\": current_word_ends_with,\n    \"window\": [0, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": currentWordEndsWithParameterValues\n  },\n  \"PREV-WORD-IS\": {\n    \"function\": prev_word_is,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prevWordParameterValues\n  },\n  // Predicates as used in the Dutch rules in data/Dutch/brill_CONTEXTRULES.jg\n  \"PREVTAG\": {\n    \"function\": prev_tag_is,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prevTagParameterValues\n  },\n  \"NEXT1OR2TAG\": {\n    \"function\": next_1_or_2_tag_is,\n    \"window\": [0, 1],\n    \"nrParameters\": 1,\n    \"parameter1Values\": next1Or2TagIsParameterValues\n  },\n  \"NEXTTAG\": {\n    \"function\": next_tag_is,\n    \"window\": [0, 1],\n    \"nrParameters\": 1,\n    \"parameter1Values\": nextTagParameterValues\n  },\n  \"PREV1OR2TAG\": {\n    \"function\": prev_1_or_2_tag,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prev1Or2TagParameterValues\n  },\n  \"WDAND2TAGAFT\": {\n    \"function\": current_word_and_2_tag_after_are,\n    \"window\": [0, 2],\n    \"nrParameters\": 2,\n    \"parameter1Values\": currentWordParameterValues,\n    \"parameter2Values\": twoTagAfterParameterValues\n  },\n  \"NEXT1OR2OR3TAG\": {\n    \"function\": next_1_or_2_or_3_tag,\n    // Minimum required window to apply this template is one tag to the right\n    \"window\": [0, 1],\n    \"nrParameters\": 1,\n    \"parameter1Values\": next1Or2Or3TagParameterValues\n  },\n  \"CURWD\": {\n    \"function\": current_word_is,\n    \"window\": [0, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": currentWordParameterValues\n  },\n  \"SURROUNDTAG\": {\n    \"function\": surrounded_by_tags,\n    \"window\": [-1, 1],\n    \"nrParameters\": 2,\n    \"parameter1Values\": prevTagParameterValues,\n    \"parameter2Values\": nextTagParameterValues\n  },\n  \"PREV1OR2OR3TAG\": {\n    \"function\": prev_1_or_2_or_3_tag,\n    // Minimum required window to apply this template is one tag to the left\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prev1Or2Or3TagParameterValues\n  },\n  \"WDNEXTTAG\": {\n    \"function\": current_word_and_next_tag_are,\n    \"window\": [0, 1],\n    \"nrParameters\": 2,\n    \"parameter1Values\": currentWordParameterValues,\n    \"parameter2Values\": nextTagParameterValues\n  },\n  \"PREV1OR2WD\": {\n    \"function\": prev_1_or_2_word_is,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prev1Or2WordParameterValues\n  },\n  \"NEXTWD\": {\n    \"function\": next_word_is,\n    \"window\": [0, 1],\n    \"nrParameters\": 1,\n    \"parameter1Values\": nextWordParameterValues\n  },\n  \"PREVWD\": {\n    \"function\": prev_word_is,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prevWordParameterValues\n  },\n  \"NEXT2TAG\": {\n    \"function\": next_2_tag_is,\n    \"window\": [0, 2],\n    \"nrParameters\": 1,\n    \"parameter1Values\": next2TagParameterValues\n  },\n  \"WDAND2TAGBFR\": {\n    \"function\": current_word_and_2_tag_before_are,\n    \"window\": [-2, 0],\n    \"nrParameters\": 2,\n    \"parameter1Values\": currentWordParameterValues,\n    \"parameter2Values\": twoTagBeforeParameterValues\n  },\n  \"WDAND2AFT\": {\n    \"function\": current_word_and_2_after_are,\n    \"window\": [0, 2],\n    \"nrParameters\": 2,\n    \"parameter1Values\": currentWordParameterValues,\n    \"parameter2Values\": twoTagAfterParameterValues\n  },\n  \"WDPREVTAG\": {\n    \"function\": current_word_and_prev_tag_are,\n    \"window\": [-1, 0],\n    \"nrParameters\": 2,\n    \"parameter1Values\": currentWordParameterValues,\n    \"parameter2Values\": prevTagParameterValues\n  },\n  \"RBIGRAM\": {\n    \"function\": right_bigram_is,\n    \"window\": [0, 1],\n    \"nrParameters\": 2,\n    \"parameter1Values\": currentWordParameterValues,\n    \"parameter2Values\": nextWordParameterValues\n  },\n  \"LBIGRAM\": {\n    \"function\": left_bigram_is,\n    \"window\": [-1, 0],\n    \"nrParameters\": 2,\n    \"parameter1Values\": prevWordParameterValues,\n    \"parameter2Values\": currentWordParameterValues\n  },\n  \"NEXTBIGRAM\": {\n    \"function\": next_bigram_is,\n    \"window\": [0, 2],\n    \"nrParameters\": 2,\n    \"parameter1Values\": nextWordParameterValues,\n    \"parameter2Values\": twoWordAfterParameterValues\n  },\n  \"PREVBIGRAM\": {\n    \"function\": prev_bigram_is,\n    \"window\": [-2, 0],\n    \"nrParameters\": 2,\n    \"parameter1Values\": twoWordBeforeParameterValues,\n    \"parameter2Values\": prevWordParameterValues\n  },\n  \"PREV2TAG\": {\n    \"function\": prev_2_tag_is,\n    \"window\": [-2, 0],\n    \"nrParameters\": 2,\n    \"parameter1Values\": twoTagBeforeParameterValues,\n    \"parameter2Values\": prevTagParameterValues\n  },\n  \"NEXT1OR2WD\": {\n    \"function\": next_1_or_2_word_is,\n    \"window\": [0, 1],\n    \"nrParameters\": 1,\n    \"parameter1Values\": next1Or2WordParameterValues\n  },\n  \"DEFAULT\": {\n    \"function\": default_predicate,\n    \"window\": [0, 0],\n    \"nrParameters\": 0\n  }\n}; // ==================================\n// Predicates that start with words\n// ==================================\n\nfunction next_word_is_cap(sentence, i, parameter) {\n  if (i < sentence.taggedWords.length - 1) {\n    var next_word = sentence.taggedWords[i + 1].token;\n    return next_word[0] === next_word[0].toUpperCase();\n  }\n\n  return false;\n}\n\nfunction next_word_is(sentence, i, parameter) {\n  if (i < sentence.taggedWords.length - 1) {\n    return sentence.taggedWords[i + 1].token === parameter;\n  }\n}\n\nfunction nextWordParameterValues(sentence, i) {\n  if (i < sentence.taggedWords.length - 1) {\n    return [sentence.taggedWords[i + 1].token];\n  } else {\n    return [];\n  }\n}\n\nfunction prev_word_is_cap(sentence, i, parameter) {\n  var prev_word = null;\n\n  if (i > 0) {\n    prev_word = sentence.taggedWords[i - 1].token;\n    return prev_word[0] === prev_word[0].toUpperCase();\n  }\n\n  return false;\n}\n\nfunction current_word_is_cap(sentence, i, parameter) {\n  var current_word = sentence.taggedWords[i].token;\n  return current_word[0] === current_word[0].toUpperCase();\n}\n\nfunction currentWordParameterValues(sentence, i) {\n  return [sentence[i].token];\n}\n\nfunction current_word_is(sentence, i, parameter) {\n  return sentence.taggedWords[i].token === parameter;\n}\n\nfunction isNumeric(num) {\n  return !isNaN(num);\n}\n\nfunction current_word_is_number(sentence, i, parameter) {\n  var is_number = isNumeric(sentence.taggedWords[i].token); // Attempt to parse it as a float\n\n  if (!is_number) {\n    is_number = parseFloat(sentence.taggedWords[i].token);\n  }\n\n  return parameter === \"YES\" ? is_number : !is_number;\n} // Checks if the current word is a url\n// Adapted from the original Javascript Brill tagger\n\n\nfunction current_word_is_url(sentence, i, parameter) {\n  var is_url = false;\n\n  if (sentence.taggedWords[i].token.indexOf(\".\") > -1) {\n    // url if there are two contiguous alpha characters\n    if (/[a-zA-Z]{2}/.test(sentence.taggedWords[i].token)) {\n      is_url = true;\n    }\n  }\n\n  return parameter === \"YES\" ? is_url : !is_url;\n}\n\nfunction current_word_and_2_tag_after_are(sentence, i, parameter1, parameter2) {\n  if (i < sentence.taggedWords.length - 2) {\n    if (sentence.taggedWords[i + 2][1] === parameter2) {\n      return sentence.taggedWords[i].token === parameter1;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\nfunction twoTagAfterParameterValues(sentence, i) {\n  if (i < sentence.taggedWords.length - 2) {\n    return [sentence.taggedWords[i + 2].tag];\n  } else {\n    return [];\n  }\n}\n\nfunction current_word_and_next_tag_are(sentence, i, parameter1, parameter2) {\n  var next_tag = false; // check current word\n\n  var current_word = sentence.taggedWords[i].token === parameter1; // check next tag\n\n  if (i < sentence.taggedWords.length - 1) {\n    next_tag = sentence.taggedWords[i + 1].tag === parameter2;\n  }\n\n  return current_word && next_tag;\n}\n\nfunction current_word_and_prev_tag_are(sentence, i, parameter1, parameter2) {\n  var prev_tag = false; // check current word\n\n  var current_word = sentence.taggedWords[i].token === parameter2; // check prev tag\n\n  if (i > 0) {\n    prev_tag = sentence.taggedWords[i - 1].tag === parameter1;\n  }\n\n  return current_word && prev_tag;\n}\n\nfunction current_word_and_2_tag_before_are(sentence, i, parameter1, parameter2) {\n  var two_tags_before = false; // check current word\n\n  var current_word = sentence.taggedWords[i].token === parameter2;\n\n  if (i > 1) {\n    // check two tags before\n    two_tags_before = sentence.taggedWords[i - 2].tag === parameter1;\n  }\n\n  return current_word && two_tags_before;\n}\n\nfunction twoTagBeforeParameterValues(sentence, i) {\n  if (i > 1) {\n    return [sentence.taggedWords[i - 2].tag];\n  } else {\n    return [];\n  }\n}\n\nfunction current_word_and_2_after_are(sentence, i, parameter1, parameter2) {\n  var two_words_after = false; // check current word\n\n  var current_word = sentence.taggedWords[i].token === parameter1;\n\n  if (i < sentence.taggedWords.length - 2) {\n    two_words_after = sentence.taggedWords[i + 2].token === parameter2;\n  }\n\n  return current_word && two_words_after;\n}\n\nfunction prev_word_is(sentence, i, parameter) {\n  if (i > 0) {\n    return sentence.taggedWords[i - 1].token.toLowerCase() === parameter.toLowerCase();\n  } else {\n    return false;\n  }\n} // Returns the right value for parameter 1 of prev_word_is\n\n\nfunction prevWordParameterValues(sentence, i) {\n  if (i > 0) {\n    return [sentence.taggedWords[i - 1].token];\n  } else {\n    return [];\n  }\n}\n\nfunction prev_1_or_2_word_is(sentence, i, parameter) {\n  var prev_1 = false;\n  var prev_2 = false;\n\n  if (i > 0) {\n    prev_1 = sentence.taggedWords[i - 1].token.toLowerCase() === parameter.toLowerCase();\n  }\n\n  if (i > 1) {\n    prev_2 = sentence.taggedWords[i - 2].token.toLowerCase() === parameter.toLowerCase();\n  }\n\n  return prev_1 || prev_2;\n}\n\nfunction prev1Or2WordParameterValues(sentence, i) {\n  var values = [];\n\n  if (i > 0) {\n    values.push(sentence[i - 1].token);\n  }\n\n  if (i > 1) {\n    values.push(sentence[i - 2].token);\n  }\n\n  return values;\n} // Indicates whether or not this string ends with the specified string.\n// Adapted from the original Javascript Brill tagger\n\n\nfunction current_word_ends_with(sentence, i, parameter) {\n  var word = sentence.taggedWords[i].token;\n\n  if (!parameter || parameter.length > word.length) {\n    return false;\n  }\n\n  return word.indexOf(parameter) === word.length - parameter.length;\n} // sentence is an array of token records\n\n\nfunction currentWordEndsWithParameterValues(sentence, i) {\n  var values = [\"ing\"];\n  return values;\n}\n\nfunction right_bigram_is(sentence, i, parameter1, parameter2) {\n  var word_1 = sentence.taggedWords[i].token === parameter1;\n  var word_2 = false;\n\n  if (i < sentence.taggedWords.length - 1) {\n    word_2 = sentence.taggedWords[i + 1].token === parameter2;\n  }\n\n  return word_1 && word_2;\n}\n\nfunction left_bigram_is(sentence, i, parameter1, parameter2) {\n  var word_1 = false;\n  var word_2 = sentence.taggedWords[i].token === parameter2;\n\n  if (i > 0) {\n    word_1 = sentence.taggedWords[i - 1].token === parameter1;\n  }\n\n  return word_1 && word_2;\n}\n\nfunction next_bigram_is(sentence, i, parameter1, parameter2) {\n  var word_1 = false;\n  var word_2 = false;\n\n  if (i < sentence.taggedWords.length - 1) {\n    word_1 = sentence.taggedWords[i + 1].token === parameter1;\n  }\n\n  if (i < sentence.taggedWords.length - 2) {\n    word_2 = sentence.taggedWords[i + 2].token === parameter2;\n  }\n\n  return word_1 && word_2;\n}\n\nfunction twoWordAfterParameterValues(sentence, i) {\n  if (i < sentence.taggedWords.length - 2) {\n    return [sentence.taggedWords[i + 2].token];\n  } else {\n    return [];\n  }\n}\n\nfunction prev_bigram_is(sentence, i, parameter1, parameter2) {\n  var word_1 = false;\n  var word_2 = false;\n\n  if (i > 1) {\n    word_1 = sentence.taggedWords[i - 2].token === parameter1;\n  }\n\n  if (i > 0) {\n    word_2 = sentence.taggedWords[i - 1].token === parameter2;\n  }\n\n  return word_1 && word_2;\n}\n\nfunction twoWordBeforeParameterValues(sentence, i) {\n  if (i > 1) {\n    return [sentence.taggedWords[i - 2].token];\n  } else {\n    return [];\n  }\n}\n\nfunction next_1_or_2_word_is(sentence, i, parameter1, parameter2) {\n  next_1 = false;\n  next_2 = false;\n\n  if (i < sentence.taggedWords.length - 1) {\n    next_1 = sentence.taggedWords[i + 1].token === parameter1;\n  }\n\n  if (i < sentence.taggedWords.length - 2) {\n    next_2 = sentence.taggedWords[i + 2].token === parameter2;\n  }\n\n  return next_1 || next_2;\n}\n\nfunction next1Or2WordParameterValues(sentence, i) {\n  var values = [];\n\n  if (i < sentence.taggedWords.length - 1) {\n    values.push(sentence.taggedWords[i + 1].token);\n  }\n\n  if (i < sentence.taggedWords.length - 2) {\n    values.push(sentence.taggedWords[i + 2].token);\n  }\n\n  return values;\n} // ==================================\n// Predicates about tags\n// ==================================\n\n\nfunction next_tag_is(sentence, i, parameter) {\n  if (i < sentence.taggedWords.length - 1) {\n    return sentence.taggedWords[i + 1].tag === parameter;\n  } else {\n    return false;\n  }\n}\n\nfunction nextTagParameterValues(sentence, i) {\n  if (i < sentence.taggedWords.length - 1) {\n    return [sentence.taggedWords[i + 1].tag];\n  } else {\n    return [];\n  }\n}\n\nfunction next_2_tag_is(sentence, i, parameter) {\n  if (i < sentence.taggedWords.length - 2) {\n    return sentence.taggedWords[i + 2].tag === parameter;\n  } else {\n    return false;\n  }\n}\n\nfunction next2TagParameterValues(sentence, i) {\n  if (i < sentence.taggedWords.length - 2) {\n    return [sentence.taggedWords[i + 2].tag];\n  } else {\n    return [];\n  }\n}\n\nfunction next_1_or_2_tag_is(sentence, i, parameter) {\n  var next_1 = false;\n  var next_2 = false;\n\n  if (i < sentence.taggedWords.length - 1) {\n    next_1 = sentence.taggedWords[i + 1].tag === parameter;\n  }\n\n  if (i < sentence.taggedWords.length - 2) {\n    next_2 = sentence.taggedWords[i + 2].tag === parameter;\n  }\n\n  return next_1 || next_2;\n}\n\nfunction next1Or2TagIsParameterValues(sentence, i) {\n  var values = [];\n\n  if (i < sentence.taggedWords.length - 1) {\n    values.push(sentence.taggedWords[i + 1].tag);\n  }\n\n  if (i < sentence.taggedWords.length - 2) {\n    values.push(sentence.taggedWords[i + 2].tag);\n  }\n\n  return values;\n}\n\nfunction next_1_or_2_or_3_tag(sentence, i, parameter) {\n  var next_1 = false;\n  var next_2 = false;\n  var next_3 = false;\n\n  if (i < sentence.taggedWords.length - 1) {\n    next_1 = sentence.taggedWords[i + 1].tag === parameter;\n  }\n\n  if (i < sentence.taggedWords.length - 2) {\n    next_2 = sentence.taggedWords[i + 2].tag === parameter;\n  }\n\n  if (i < sentence.taggedWords.length - 3) {\n    next_3 = sentence.taggedWords[i + 3].tag === parameter;\n  }\n\n  return next_1 || next_2 || next_3;\n}\n\nfunction next1Or2Or3TagParameterValues(sentence, i) {\n  var values = [];\n\n  if (i < sentence.taggedWords.length - 1) {\n    values.push(sentence.taggedWords[i + 1].tag);\n  }\n\n  if (i < sentence.taggedWords.length - 2) {\n    values.push(sentence.taggedWords[i + 2].tag);\n  }\n\n  if (i < sentence.taggedWords.length - 3) {\n    values.push(sentence.taggedWords[i + 3].tag);\n  }\n\n  return values;\n}\n\nfunction surrounded_by_tags(sentence, i, parameter1, parameter2) {\n  if (i < sentence.taggedWords.length - 1) {\n    // check next tag\n    if (sentence.taggedWords[i + 1].tag === parameter2) {\n      // check previous tag\n      if (i > 0) {\n        return sentence.taggedWords[i - 1].tag === parameter1;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\nfunction prev_1_or_2_or_3_tag(sentence, i, parameter) {\n  var prev_1 = null;\n\n  if (i > 0) {\n    prev_1 = sentence.taggedWords[i - 1].tag;\n  }\n\n  var prev_2 = null;\n\n  if (i > 1) {\n    prev_2 = sentence.taggedWords[i - 2].tag;\n  }\n\n  var prev_3 = null;\n\n  if (i > 2) {\n    prev_3 = sentence.taggedWords[i - 3].tag;\n  }\n\n  return prev_1 === parameter || prev_2 === parameter || prev_3 === parameter;\n}\n\nfunction prev1Or2Or3TagParameterValues(sentence, i) {\n  var values = [];\n\n  if (i > 0) {\n    values.push(sentence.taggedWords[i - 1].tag);\n  }\n\n  if (i > 1) {\n    values.push(sentence.taggedWords[i - 2].tag);\n  }\n\n  if (i > 2) {\n    values.push(sentence.taggedWords[i - 3].tag);\n  }\n\n  return values;\n}\n\nfunction prev_1_or_2_tag(sentence, i, parameter) {\n  var prev_1 = null;\n\n  if (i > 0) {\n    prev_1 = sentence.taggedWords[i - 1].tag;\n  }\n\n  var prev_2 = null;\n\n  if (i > 1) {\n    prev_2 = sentence.taggedWords[i - 2].tag;\n  }\n\n  return prev_1 === parameter || prev_2 === parameter;\n}\n\nfunction prev1Or2TagParameterValues(sentence, i) {\n  values = [];\n\n  if (i > 0) {\n    values.push(sentence.taggedWords[i - 1].tag);\n  }\n\n  if (i > 1) {\n    values.push(sentence.taggedWords[i - 2].tag);\n  }\n\n  return values;\n}\n\nfunction prev_tag_is(sentence, i, parameter) {\n  var prev = false;\n\n  if (i > 0) {\n    prev = sentence.taggedWords[i - 1].tag === parameter;\n  }\n\n  return prev;\n}\n\nfunction prevTagParameterValues(sentence, i) {\n  if (i > 0) {\n    return [sentence.taggedWords[i - 1].tag];\n  } else {\n    return [];\n  }\n} // Looks like a useless predicate because transformation already take the\n// current tag into account\n\n\nfunction current_word_is_tag(sentence, i, parameter) {\n  return sentence.taggedWords[i].tag === parameter;\n}\n\nfunction prev_2_tag_is(sentence, i, parameter) {\n  var prev_2 = false;\n\n  if (i > 1) {\n    prev_2 = sentence.taggedWords[i - 2].tag === parameter;\n  }\n\n  return prev_2;\n}\n\nfunction default_predicate(sentence, i, parameter) {\n  return false;\n}\n\nmodule.exports = ruleTemplates;","map":{"version":3,"sources":["/Users/tenzy/Documents/work/vata-hackathon-fe/atva/node_modules/natural/lib/natural/brill_pos_tagger/lib/RuleTemplates.js"],"names":["ruleTemplates","next_tag_is","nextTagParameterValues","next_word_is_cap","prev_1_or_2_or_3_tag","prev1Or2Or3TagParameterValues","prev_1_or_2_tag","prev1Or2TagParameterValues","prev_tag_is","prevTagParameterValues","prev_word_is_cap","current_word_is_cap","current_word_is_number","current_word_is_url","current_word_ends_with","currentWordEndsWithParameterValues","prev_word_is","prevWordParameterValues","next_1_or_2_tag_is","next1Or2TagIsParameterValues","current_word_and_2_tag_after_are","currentWordParameterValues","twoTagAfterParameterValues","next_1_or_2_or_3_tag","next1Or2Or3TagParameterValues","current_word_is","surrounded_by_tags","current_word_and_next_tag_are","prev_1_or_2_word_is","prev1Or2WordParameterValues","next_word_is","nextWordParameterValues","next_2_tag_is","next2TagParameterValues","current_word_and_2_tag_before_are","twoTagBeforeParameterValues","current_word_and_2_after_are","current_word_and_prev_tag_are","right_bigram_is","left_bigram_is","next_bigram_is","twoWordAfterParameterValues","prev_bigram_is","twoWordBeforeParameterValues","prev_2_tag_is","next_1_or_2_word_is","next1Or2WordParameterValues","default_predicate","sentence","i","parameter","taggedWords","length","next_word","token","toUpperCase","prev_word","current_word","isNumeric","num","isNaN","is_number","parseFloat","is_url","indexOf","test","parameter1","parameter2","tag","next_tag","prev_tag","two_tags_before","two_words_after","toLowerCase","prev_1","prev_2","values","push","word","word_1","word_2","next_1","next_2","next_3","prev_3","prev","current_word_is_tag","module","exports"],"mappings":"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","sourcesContent":["/*\n  Rule templates that provide metadata for generating transformation rules\n  Copyright (C) 2017 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nvar ruleTemplates = {\n  // Predicates as used in the English rules in data/English/tr_from_posjs.txt\n  \"NEXT-TAG\": {\n    // maps to the predicate function\n    \"function\": next_tag_is,\n    // Minimum required space before or after current position to be a relevant predicate\n    \"window\": [0, 1],\n    // The number of parameters the predicate takes\n    \"nrParameters\": 1,\n    // Function that returns relevant values for parameter 1\n    \"parameter1Values\": nextTagParameterValues\n  },\n  \"NEXT-WORD-IS-CAP\": {\n    \"function\": next_word_is_cap,\n    \"window\": [0, 1],\n    \"nrParameters\" : 0\n  },\n  \"PREV-1-OR-2-OR-3-TAG\": {\n    \"function\": prev_1_or_2_or_3_tag,\n    \"window\" : [-1, 0],\n    \"nrParameters\" : 1,\n    \"parameter1Values\": prev1Or2Or3TagParameterValues\n  },\n  \"PREV-1-OR-2-TAG\": {\n    \"function\": prev_1_or_2_tag,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prev1Or2TagParameterValues\n  },\n  \"NEXT-WORD-IS-TAG\": {\n    \"function\": next_tag_is,\n    \"window\": [0, 1],\n    \"nrParameters\": 1,\n    \"parameter1Values\": nextTagParameterValues\n  },\n  \"PREV-TAG\": {\n    \"function\": prev_tag_is,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prevTagParameterValues\n  },\n  /*\n \"CURRENT-WORD-IS-TAG\": {\n   \"function\": current_word_is_tag,\n   \"window\": [0],\n   \"nrParameter\": 1,\n   \"parameter1Values\": currentTagParameterValues\n   },\n  */\n  \"PREV-WORD-IS-CAP\": {\n    \"function\": prev_word_is_cap,\n    \"window\": [-1, 0],\n    \"nrParameters\": 0\n  },\n  \"CURRENT-WORD-IS-CAP\": {\n    \"function\": current_word_is_cap,\n    \"window\": [0, 0],\n    \"nrParameters\": 0\n  },\n  \"CURRENT-WORD-IS-NUMBER\": {\n    \"function\": current_word_is_number,\n    \"window\": [0, 0],\n    \"nrParameters\": 0\n  },\n  \"CURRENT-WORD-IS-URL\": {\n    \"function\": current_word_is_url,\n    \"window\": [0, 0],\n    \"nrParameters\": 0\n  },\n  \"CURRENT-WORD-ENDS-WITH\": {\n    \"function\": current_word_ends_with,\n    \"window\": [0, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": currentWordEndsWithParameterValues\n  },\n  \"PREV-WORD-IS\": {\n    \"function\": prev_word_is,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prevWordParameterValues\n  },\n\n  // Predicates as used in the Dutch rules in data/Dutch/brill_CONTEXTRULES.jg\n  \"PREVTAG\": {\n    \"function\": prev_tag_is,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prevTagParameterValues\n  },\n  \"NEXT1OR2TAG\": {\n    \"function\": next_1_or_2_tag_is,\n    \"window\": [0, 1],\n    \"nrParameters\": 1,\n    \"parameter1Values\": next1Or2TagIsParameterValues\n  },\n  \"NEXTTAG\": {\n    \"function\": next_tag_is,\n    \"window\": [0, 1],\n    \"nrParameters\": 1,\n    \"parameter1Values\": nextTagParameterValues\n  },\n  \"PREV1OR2TAG\": {\n    \"function\": prev_1_or_2_tag,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prev1Or2TagParameterValues\n  },\n  \"WDAND2TAGAFT\": {\n    \"function\": current_word_and_2_tag_after_are,\n    \"window\": [0, 2],\n    \"nrParameters\": 2,\n    \"parameter1Values\": currentWordParameterValues,\n    \"parameter2Values\": twoTagAfterParameterValues\n  },\n  \"NEXT1OR2OR3TAG\": {\n    \"function\": next_1_or_2_or_3_tag,\n    // Minimum required window to apply this template is one tag to the right\n    \"window\": [0, 1],\n    \"nrParameters\": 1,\n    \"parameter1Values\": next1Or2Or3TagParameterValues\n  },\n  \"CURWD\": {\n    \"function\": current_word_is,\n    \"window\": [0, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": currentWordParameterValues\n  },\n  \"SURROUNDTAG\": {\n    \"function\": surrounded_by_tags,\n    \"window\": [-1, 1],\n    \"nrParameters\": 2,\n    \"parameter1Values\": prevTagParameterValues,\n    \"parameter2Values\": nextTagParameterValues\n  },\n  \"PREV1OR2OR3TAG\": {\n    \"function\": prev_1_or_2_or_3_tag,\n    // Minimum required window to apply this template is one tag to the left\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prev1Or2Or3TagParameterValues\n  },\n  \"WDNEXTTAG\": {\n    \"function\": current_word_and_next_tag_are,\n    \"window\": [0, 1],\n    \"nrParameters\": 2,\n    \"parameter1Values\": currentWordParameterValues,\n    \"parameter2Values\": nextTagParameterValues\n  },\n  \"PREV1OR2WD\": {\n    \"function\": prev_1_or_2_word_is,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prev1Or2WordParameterValues\n  },\n  \"NEXTWD\": {\n    \"function\": next_word_is,\n    \"window\": [0, 1],\n    \"nrParameters\": 1,\n    \"parameter1Values\": nextWordParameterValues\n  },\n  \"PREVWD\": {\n    \"function\": prev_word_is,\n    \"window\": [-1, 0],\n    \"nrParameters\": 1,\n    \"parameter1Values\": prevWordParameterValues\n  },\n  \"NEXT2TAG\": {\n    \"function\": next_2_tag_is,\n    \"window\": [0, 2],\n    \"nrParameters\": 1,\n    \"parameter1Values\": next2TagParameterValues\n  },\n  \"WDAND2TAGBFR\": {\n    \"function\": current_word_and_2_tag_before_are,\n    \"window\": [-2, 0],\n    \"nrParameters\": 2,\n    \"parameter1Values\": currentWordParameterValues,\n    \"parameter2Values\": twoTagBeforeParameterValues\n  },\n  \"WDAND2AFT\": {\n    \"function\": current_word_and_2_after_are,\n    \"window\": [0, 2],\n    \"nrParameters\": 2,\n    \"parameter1Values\": currentWordParameterValues,\n    \"parameter2Values\": twoTagAfterParameterValues\n  },\n  \"WDPREVTAG\": {\n    \"function\": current_word_and_prev_tag_are,\n    \"window\": [-1, 0],\n    \"nrParameters\": 2,\n    \"parameter1Values\": currentWordParameterValues,\n    \"parameter2Values\": prevTagParameterValues\n  },\n  \"RBIGRAM\": {\n    \"function\": right_bigram_is,\n    \"window\": [0, 1],\n    \"nrParameters\": 2,\n    \"parameter1Values\": currentWordParameterValues,\n    \"parameter2Values\": nextWordParameterValues\n  },\n  \"LBIGRAM\": {\n    \"function\": left_bigram_is,\n    \"window\": [-1, 0],\n    \"nrParameters\": 2,\n    \"parameter1Values\": prevWordParameterValues,\n    \"parameter2Values\": currentWordParameterValues\n  },\n  \"NEXTBIGRAM\": {\n    \"function\": next_bigram_is,\n    \"window\": [0, 2],\n    \"nrParameters\": 2,\n    \"parameter1Values\": nextWordParameterValues,\n    \"parameter2Values\": twoWordAfterParameterValues\n  },\n  \"PREVBIGRAM\": {\n    \"function\": prev_bigram_is,\n    \"window\": [-2, 0],\n    \"nrParameters\": 2,\n    \"parameter1Values\": twoWordBeforeParameterValues,\n    \"parameter2Values\": prevWordParameterValues\n  },\n  \"PREV2TAG\": {\n    \"function\": prev_2_tag_is,\n    \"window\": [-2, 0],\n    \"nrParameters\": 2,\n    \"parameter1Values\": twoTagBeforeParameterValues,\n    \"parameter2Values\": prevTagParameterValues\n  },\n  \"NEXT1OR2WD\": {\n    \"function\": next_1_or_2_word_is,\n    \"window\": [0, 1],\n    \"nrParameters\": 1,\n    \"parameter1Values\": next1Or2WordParameterValues\n  },\n  \"DEFAULT\": {\n    \"function\": default_predicate,\n    \"window\": [0, 0],\n    \"nrParameters\": 0\n  }\n};\n\n\n// ==================================\n// Predicates that start with words\n// ==================================\nfunction next_word_is_cap(sentence, i, parameter) {\n  if (i < sentence.taggedWords.length - 1) {\n    var next_word = sentence.taggedWords[i+1].token;\n    return(next_word[0] === next_word[0].toUpperCase());\n  }\n  return(false);\n}\n\nfunction next_word_is(sentence, i, parameter) {\n  if (i < sentence.taggedWords.length - 1) {\n    return(sentence.taggedWords[i + 1].token === parameter);\n  }\n}\n\nfunction nextWordParameterValues(sentence, i) {\n  if (i < sentence.taggedWords.length - 1) {\n    return [sentence.taggedWords[i + 1].token];\n  }\n  else {\n    return [];\n  }\n}\n\nfunction prev_word_is_cap(sentence, i, parameter) {\n  var prev_word = null;\n  if (i > 0) {\n    prev_word = sentence.taggedWords[i-1].token;\n    return(prev_word[0] === prev_word[0].toUpperCase());\n  }\n  return(false);\n}\n\nfunction current_word_is_cap(sentence, i, parameter) {\n  var current_word = sentence.taggedWords[i].token;\n  return(current_word[0] === current_word[0].toUpperCase());\n}\n\nfunction currentWordParameterValues(sentence, i) {\n  return [sentence[i].token];\n}\n\nfunction current_word_is(sentence, i, parameter) {\n  return(sentence.taggedWords[i].token === parameter);\n}\n\nfunction isNumeric(num) {\n  return (!isNaN(num));\n}\n\nfunction current_word_is_number(sentence, i, parameter) {\n  var is_number = isNumeric(sentence.taggedWords[i].token);\n  // Attempt to parse it as a float\n  if (!is_number) {\n    is_number = parseFloat(sentence.taggedWords[i].token);\n  }\n  return((parameter === \"YES\") ? is_number : !is_number);\n}\n\n// Checks if the current word is a url\n// Adapted from the original Javascript Brill tagger\nfunction current_word_is_url(sentence, i, parameter) {\n  var is_url = false;\n  if (sentence.taggedWords[i].token.indexOf(\".\") > -1) {\n    // url if there are two contiguous alpha characters\n    if (/[a-zA-Z]{2}/.test(sentence.taggedWords[i].token)) {\n      is_url = true;\n    }\n  }\n  return((parameter === \"YES\") ? is_url : !is_url);\n}\n\nfunction current_word_and_2_tag_after_are(sentence, i, parameter1, parameter2) {\n  if (i < sentence.taggedWords.length - 2) {\n    if (sentence.taggedWords[i + 2][1] === parameter2) {\n      return(sentence.taggedWords[i].token === parameter1);\n    }\n    else {\n      return(false);\n    }\n  }\n  else {\n    return(false);\n  }\n}\n\nfunction twoTagAfterParameterValues(sentence, i) {\n  if (i < sentence.taggedWords.length - 2) {\n    return [sentence.taggedWords[i + 2].tag];\n  }\n  else {\n    return [];\n  }\n}\n\nfunction current_word_and_next_tag_are(sentence, i, parameter1, parameter2) {\n  var next_tag = false;\n  // check current word\n  var current_word = (sentence.taggedWords[i].token === parameter1);\n  // check next tag\n  if (i < sentence.taggedWords.length - 1) {\n    next_tag = (sentence.taggedWords[i+1].tag === parameter2);\n  }\n  return(current_word && next_tag);\n}\n\nfunction current_word_and_prev_tag_are(sentence, i, parameter1, parameter2) {\n  var prev_tag = false;\n  // check current word\n  var current_word = (sentence.taggedWords[i].token === parameter2);\n  // check prev tag\n  if (i > 0) {\n    prev_tag = (sentence.taggedWords[i-1].tag === parameter1);\n  }\n  return(current_word && prev_tag);\n}\n\nfunction current_word_and_2_tag_before_are(sentence, i, parameter1, parameter2) {\n  var two_tags_before = false;\n  // check current word\n  var current_word = (sentence.taggedWords[i].token === parameter2);\n  if (i > 1) {\n    // check two tags before\n    two_tags_before = (sentence.taggedWords[i - 2].tag === parameter1);\n  }\n  return(current_word && two_tags_before);\n}\n\nfunction twoTagBeforeParameterValues(sentence, i) {\n  if (i > 1) {\n    return [sentence.taggedWords[i - 2].tag];\n  }\n  else {\n    return [];\n  }\n}\n\nfunction current_word_and_2_after_are(sentence, i, parameter1, parameter2) {\n  var two_words_after = false;\n  // check current word\n  var current_word = (sentence.taggedWords[i].token === parameter1);\n  if (i < sentence.taggedWords.length - 2) {\n    two_words_after = (sentence.taggedWords[i+2].token === parameter2);\n  }\n  return(current_word && two_words_after);\n}\n\nfunction prev_word_is(sentence, i, parameter) {\n  if (i > 0) {\n    return(sentence.taggedWords[i - 1].token.toLowerCase() === parameter.toLowerCase());\n  }\n  else {\n    return(false);\n  }\n}\n\n// Returns the right value for parameter 1 of prev_word_is\nfunction prevWordParameterValues(sentence, i) {\n  if (i > 0) {\n    return [sentence.taggedWords[i - 1].token];\n  }\n  else {\n    return [];\n  }\n}\n\nfunction prev_1_or_2_word_is(sentence, i, parameter) {\n  var prev_1 = false;\n  var prev_2 = false;\n  if (i > 0) {\n    prev_1 = (sentence.taggedWords[i-1].token.toLowerCase() === parameter.toLowerCase());\n  }\n  if (i > 1) {\n    prev_2 = (sentence.taggedWords[i-2].token.toLowerCase() === parameter.toLowerCase());\n  }\n  return(prev_1 || prev_2);\n}\n\nfunction prev1Or2WordParameterValues(sentence, i) {\n  var values = [];\n  if (i > 0) {\n    values.push(sentence[i - 1].token);\n  }\n  if (i > 1) {\n    values.push(sentence[i - 2].token);\n  }\n  return values;\n}\n\n// Indicates whether or not this string ends with the specified string.\n// Adapted from the original Javascript Brill tagger\nfunction current_word_ends_with(sentence, i, parameter) {\n  var word = sentence.taggedWords[i].token;\n  if (!parameter || (parameter.length > word.length)) {\n    return false;\n  }\n  return(word.indexOf(parameter) === (word.length - parameter.length));\n}\n\n// sentence is an array of token records\nfunction currentWordEndsWithParameterValues(sentence, i) {\n  var values = [\"ing\"];\n\n  return values;\n}\n\nfunction right_bigram_is(sentence, i, parameter1, parameter2) {\n  var word_1 = (sentence.taggedWords[i].token === parameter1);\n  var word_2 = false;\n  if (i < sentence.taggedWords.length - 1) {\n    word_2 = (sentence.taggedWords[i+1].token === parameter2);\n  }\n  return(word_1 && word_2);\n}\n\nfunction left_bigram_is(sentence, i, parameter1, parameter2) {\n  var word_1 = false;\n  var word_2 = (sentence.taggedWords[i].token === parameter2);\n  if (i > 0) {\n    word_1 = (sentence.taggedWords[i-1].token === parameter1);\n  }\n  return(word_1 && word_2);\n}\n\nfunction next_bigram_is(sentence, i, parameter1, parameter2) {\n  var word_1 = false;\n  var word_2 = false;\n  if (i < sentence.taggedWords.length - 1) {\n    word_1 = (sentence.taggedWords[i + 1].token === parameter1);\n  }\n  if (i < sentence.taggedWords.length - 2) {\n    word_2 = (sentence.taggedWords[i + 2].token === parameter2);\n  }\n  return(word_1 && word_2);\n}\n\nfunction twoWordAfterParameterValues(sentence, i) {\n  if (i < sentence.taggedWords.length - 2) {\n    return [sentence.taggedWords[i + 2].token];\n  }\n  else {\n    return [];\n  }\n}\n\nfunction prev_bigram_is(sentence, i, parameter1, parameter2) {\n  var word_1 = false;\n  var word_2 = false;\n  if (i >  1) {\n    word_1 = (sentence.taggedWords[i-2].token === parameter1);\n  }\n  if (i > 0) {\n    word_2 = (sentence.taggedWords[i-1].token === parameter2);\n  }\n  return(word_1 && word_2);\n}\n\nfunction twoWordBeforeParameterValues(sentence, i) {\n  if (i >  1) {\n    return [sentence.taggedWords[i - 2].token];\n  }\n  else {\n    return [];\n  }\n}\n\nfunction next_1_or_2_word_is(sentence, i, parameter1, parameter2) {\n  next_1 = false;\n  next_2 = false;\n  if (i < sentence.taggedWords.length - 1) {\n    next_1 = (sentence.taggedWords[i+1].token === parameter1);\n  }\n  if (i < sentence.taggedWords.length - 2) {\n    next_2 = (sentence.taggedWords[i+2].token === parameter2);\n  }\n  return(next_1 || next_2);\n}\n\nfunction next1Or2WordParameterValues(sentence, i) {\n  var values = [];\n  if (i < sentence.taggedWords.length - 1) {\n    values.push(sentence.taggedWords[i + 1].token);\n  }\n  if (i < sentence.taggedWords.length - 2) {\n    values.push(sentence.taggedWords[i + 2].token);\n  }\n  return values;\n}\n\n// ==================================\n// Predicates about tags\n// ==================================\nfunction next_tag_is(sentence, i, parameter) {\n  if (i < sentence.taggedWords.length - 1) {\n    return(sentence.taggedWords[i + 1].tag === parameter);\n  }\n  else {\n    return(false);\n  }\n}\n\nfunction nextTagParameterValues(sentence, i) {\n  if (i < sentence.taggedWords.length - 1) {\n    return [sentence.taggedWords[i + 1].tag];\n  }\n  else {\n    return [];\n  }\n}\n\nfunction next_2_tag_is(sentence, i, parameter) {\n  if (i < sentence.taggedWords.length - 2) {\n    return(sentence.taggedWords[i+2].tag === parameter);\n  }\n  else {\n    return(false);\n  }\n}\n\nfunction next2TagParameterValues(sentence, i) {\n  if (i < sentence.taggedWords.length - 2) {\n    return [sentence.taggedWords[i+2].tag];\n  }\n  else {\n    return [];\n  }\n}\n\nfunction next_1_or_2_tag_is(sentence, i, parameter) {\n  var next_1 = false;\n  var next_2 = false;\n  if (i < sentence.taggedWords.length - 1) {\n    next_1 = (sentence.taggedWords[i+1].tag === parameter);\n  }\n  if (i < sentence.taggedWords.length - 2) {\n    next_2 = (sentence.taggedWords[i+2].tag === parameter);\n  }\n  return(next_1 || next_2);\n}\n\nfunction next1Or2TagIsParameterValues(sentence, i) {\n  var values = [];\n  if (i < sentence.taggedWords.length - 1) {\n    values.push(sentence.taggedWords[i + 1].tag);\n  }\n  if (i < sentence.taggedWords.length - 2) {\n    values.push(sentence.taggedWords[i + 2].tag);\n  }\n  return values;\n}\n\nfunction next_1_or_2_or_3_tag(sentence, i, parameter) {\n  var next_1 = false;\n  var next_2 = false;\n  var next_3 = false;\n  if (i < sentence.taggedWords.length - 1) {\n    next_1 = (sentence.taggedWords[i+1].tag === parameter);\n  }\n  if (i < sentence.taggedWords.length - 2) {\n    next_2 = (sentence.taggedWords[i+2].tag === parameter);\n  }\n  if (i < sentence.taggedWords.length - 3) {\n    next_3 = (sentence.taggedWords[i+3].tag === parameter);\n  }\n  return(next_1 || next_2 || next_3);\n}\n\nfunction next1Or2Or3TagParameterValues(sentence, i) {\n  var values = [];\n  if (i < sentence.taggedWords.length - 1) {\n    values.push(sentence.taggedWords[i + 1].tag);\n  }\n  if (i < sentence.taggedWords.length - 2) {\n    values.push(sentence.taggedWords[i + 2].tag);\n  }\n  if (i < sentence.taggedWords.length - 3) {\n    values.push(sentence.taggedWords[i + 3].tag);\n  }\n  return values;\n}\n\nfunction surrounded_by_tags(sentence, i, parameter1, parameter2) {\n  if (i < sentence.taggedWords.length - 1) {\n    // check next tag\n    if (sentence.taggedWords[i+1].tag === parameter2) {\n      // check previous tag\n      if (i > 0) {\n        return(sentence.taggedWords[i-1].tag === parameter1)\n      }\n      else {\n        return(false);\n      }\n    }\n    else {\n      return(false);\n    }\n  }\n  else {\n    return(false);\n  }\n}\n\nfunction prev_1_or_2_or_3_tag(sentence, i, parameter) {\n  var prev_1 = null;\n  if (i > 0) {\n    prev_1 = sentence.taggedWords[i-1].tag;\n  }\n  var prev_2 = null;\n  if (i > 1) {\n    prev_2 = sentence.taggedWords[i-2].tag;\n  }\n  var prev_3 = null;\n  if (i > 2) {\n    prev_3 = sentence.taggedWords[i-3].tag;\n  }\n  return((prev_1 === parameter) || (prev_2 === parameter) || (prev_3 === parameter));\n}\n\nfunction prev1Or2Or3TagParameterValues(sentence, i) {\n  var values = [];\n  if (i > 0) {\n    values.push(sentence.taggedWords[i - 1].tag);\n  }\n  if (i > 1) {\n    values.push(sentence.taggedWords[i - 2].tag);\n  }\n  if (i > 2) {\n    values.push(sentence.taggedWords[i - 3].tag);\n  }\n  return values;\n}\n\nfunction prev_1_or_2_tag(sentence, i, parameter) {\n  var prev_1 = null;\n  if (i > 0) {\n    prev_1 = sentence.taggedWords[i - 1].tag;\n  }\n  var prev_2 = null;\n  if (i > 1) {\n    prev_2 = sentence.taggedWords[i - 2].tag;\n  }\n  return((prev_1 === parameter) || (prev_2 === parameter));\n}\n\nfunction prev1Or2TagParameterValues(sentence, i) {\n  values = [];\n  if (i > 0) {\n    values.push(sentence.taggedWords[i - 1].tag);\n  }\n  if (i > 1) {\n    values.push(sentence.taggedWords[i - 2].tag);\n  }\n  return values;\n}\n\nfunction prev_tag_is(sentence, i, parameter) {\n  var prev = false;\n  if (i > 0) {\n    prev = (sentence.taggedWords[i-1].tag === parameter);\n  }\n  return(prev);\n}\n\nfunction prevTagParameterValues(sentence, i) {\n  if (i > 0) {\n    return [sentence.taggedWords[i - 1].tag];\n  }\n  else {\n    return [];\n  }\n}\n\n// Looks like a useless predicate because transformation already take the\n// current tag into account\nfunction current_word_is_tag(sentence, i, parameter) {\n  return(sentence.taggedWords[i].tag === parameter);\n}\n\nfunction prev_2_tag_is(sentence, i, parameter) {\n  var prev_2 = false;\n  if (i > 1) {\n    prev_2 = (sentence.taggedWords[i-2].tag === parameter);\n  }\n  return(prev_2);\n}\n\nfunction default_predicate(sentence, i, parameter) {\n  return(false);\n}\n\nmodule.exports = ruleTemplates;\n"]},"metadata":{},"sourceType":"script"}