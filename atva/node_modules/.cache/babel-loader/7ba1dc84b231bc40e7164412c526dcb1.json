{"ast":null,"code":"/*\nCopyright (c) 2011, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\nexports.SoundEx = require('./phonetics/soundex');\nexports.Metaphone = require('./phonetics/metaphone');\nexports.DoubleMetaphone = require('./phonetics/double_metaphone');\nexports.SoundExDM = require('./phonetics/dm_soundex');\nexports.PorterStemmer = require('./stemmers/porter_stemmer');\nexports.PorterStemmerFa = require('./stemmers/porter_stemmer_fa');\nexports.PorterStemmerFr = require('./stemmers/porter_stemmer_fr');\nexports.PorterStemmerRu = require('./stemmers/porter_stemmer_ru');\nexports.PorterStemmerEs = require('./stemmers/porter_stemmer_es');\nexports.PorterStemmerIt = require('./stemmers/porter_stemmer_it');\nexports.PorterStemmerNo = require('./stemmers/porter_stemmer_no');\nexports.PorterStemmerSv = require('./stemmers/porter_stemmer_sv');\nexports.PorterStemmerPt = require('./stemmers/porter_stemmer_pt');\nexports.PorterStemmerNl = require('./stemmers/porter_stemmer_nl');\nexports.LancasterStemmer = require('./stemmers/lancaster_stemmer'); // StemmerFr and StemmerPl are not stemmers. A Polish stemmer is\n// not available, and for French PorterStemmerFr should be used.\n//exports.StemmerFr = require('./stemmers/stemmer_fr');\n//exports.StemmerPl = require('./stemmers/stemmer_pl');\n\nexports.StemmerJa = require('./stemmers/stemmer_ja');\nexports.StemmerId = require('./stemmers/indonesian/stemmer_id');\nexports.AggressiveTokenizerNl = require('./tokenizers/aggressive_tokenizer_nl');\nexports.AggressiveTokenizerFa = require('./tokenizers/aggressive_tokenizer_fa');\nexports.AggressiveTokenizerFr = require('./tokenizers/aggressive_tokenizer_fr');\nexports.AggressiveTokenizerRu = require('./tokenizers/aggressive_tokenizer_ru');\nexports.AggressiveTokenizerEs = require('./tokenizers/aggressive_tokenizer_es');\nexports.AggressiveTokenizerIt = require('./tokenizers/aggressive_tokenizer_it');\nexports.AggressiveTokenizerPl = require('./tokenizers/aggressive_tokenizer_pl');\nexports.AggressiveTokenizerPt = require('./tokenizers/aggressive_tokenizer_pt');\nexports.AggressiveTokenizerNo = require('./tokenizers/aggressive_tokenizer_no');\nexports.AggressiveTokenizerSv = require('./tokenizers/aggressive_tokenizer_sv');\nexports.AggressiveTokenizerVi = require('./tokenizers/aggressive_tokenizer_vi');\nexports.AggressiveTokenizer = require('./tokenizers/aggressive_tokenizer');\nexports.CaseTokenizer = require('./tokenizers/tokenizer_case');\nexports.RegexpTokenizer = require('./tokenizers/regexp_tokenizer').RegexpTokenizer;\nexports.OrthographyTokenizer = require('./tokenizers/regexp_tokenizer').OrthographyTokenizer;\nexports.WordTokenizer = require('./tokenizers/regexp_tokenizer').WordTokenizer;\nexports.WordPunctTokenizer = require('./tokenizers/regexp_tokenizer').WordPunctTokenizer;\nexports.TreebankWordTokenizer = require('./tokenizers/treebank_word_tokenizer');\nexports.TokenizerJa = require('./tokenizers/tokenizer_ja');\nexports.SentenceTokenizer = require('./tokenizers/sentence_tokenizer');\nexports.BayesClassifier = require('./classifiers/bayes_classifier');\nexports.LogisticRegressionClassifier = require('./classifiers/logistic_regression_classifier');\nexports.NounInflector = require('./inflectors/noun_inflector');\nexports.NounInflectorFr = require('./inflectors/fr/noun_inflector');\nexports.NounInflectorJa = require('./inflectors/ja/noun_inflector');\nexports.PresentVerbInflector = require('./inflectors/present_verb_inflector');\nexports.CountInflector = require('./inflectors/count_inflector');\nexports.WordNet = require('./wordnet/wordnet');\nexports.TfIdf = require('./tfidf/tfidf');\nexports.Trie = require('./trie/trie');\nexports.SentenceAnalyzer = require('./analyzers/sentence_analyzer');\nexports.stopwords = require('./util/stopwords').words;\nexports.ShortestPathTree = require('./util/shortest_path_tree');\nexports.Spellcheck = require('./spellcheck/spellcheck');\nexports.LongestPathTree = require('./util/longest_path_tree');\nexports.EdgeWeightedDigraph = require('./util/edge_weighted_digraph');\nexports.NGrams = require('./ngrams/ngrams');\nexports.NGramsZH = require('./ngrams/ngrams_zh');\nexports.JaroWinklerDistance = require('./distance/jaro-winkler_distance');\nexports.LevenshteinDistance = require('./distance/levenshtein_distance').LevenshteinDistance;\nexports.DamerauLevenshteinDistance = require('./distance/levenshtein_distance').DamerauLevenshteinDistance;\nexports.DiceCoefficient = require('./distance/dice_coefficient');\nexports.HammingDistance = require('./distance/hamming_distance');\nexports.normalize = require('./normalizers/normalizer').normalize_tokens;\nexports.normalize_ja = require('./normalizers/normalizer_ja').normalize_ja;\nexports.removeDiacritics = require('./normalizers/remove_diacritics');\nexports.transliterate_ja = require('./transliterators/ja');\nexports.BrillPOSTagger = require('./brill_pos_tagger/lib/Brill_POS_Tagger');\nexports.BrillPOSTrainer = require('./brill_pos_tagger/lib/Brill_POS_Trainer');\nexports.BrillPOSTester = require('./brill_pos_tagger/lib/Brill_POS_Tester');\nexports.Lexicon = require('./brill_pos_tagger/lib/Lexicon');\nexports.RuleSet = require('./brill_pos_tagger/lib/RuleSet');\nexports.RuleTemplates = require('./brill_pos_tagger/lib/RuleTemplates');\nexports.RuleTemplate = require('./brill_pos_tagger/lib/RuleTemplate');\nexports.Corpus = require('./brill_pos_tagger/lib/Corpus');\nexports.MaxEntClassifier = require('./classifiers/maxent/Classifier');\nexports.Context = require('./classifiers/maxent/Context');\nexports.Feature = require('./classifiers/maxent/Feature');\nexports.FeatureSet = require('./classifiers/maxent/FeatureSet');\nexports.Sample = require('./classifiers/maxent/Sample');\nexports.Element = require('./classifiers/maxent/Element');\nexports.SE_Element = require('./classifiers/maxent/SimpleExample/SE_Element');\nexports.Sentence = require('./brill_pos_tagger/lib/Sentence');\nexports.GISScaler = require('./classifiers/maxent/GISScaler');\nexports.POS_Element = require('./classifiers/maxent/POS/POS_Element');\nexports.ME_Sentence = require('./classifiers/maxent/POS/ME_Sentence');\nexports.ME_Corpus = require('./classifiers/maxent/POS/ME_Corpus');\nexports.SentimentAnalyzer = require('./sentiment/SentimentAnalyzer');","map":{"version":3,"sources":["/Users/tenzy/Documents/work/vata-hackathon-fe/atva/node_modules/natural/lib/natural/index.js"],"names":["exports","SoundEx","require","Metaphone","DoubleMetaphone","SoundExDM","PorterStemmer","PorterStemmerFa","PorterStemmerFr","PorterStemmerRu","PorterStemmerEs","PorterStemmerIt","PorterStemmerNo","PorterStemmerSv","PorterStemmerPt","PorterStemmerNl","LancasterStemmer","StemmerJa","StemmerId","AggressiveTokenizerNl","AggressiveTokenizerFa","AggressiveTokenizerFr","AggressiveTokenizerRu","AggressiveTokenizerEs","AggressiveTokenizerIt","AggressiveTokenizerPl","AggressiveTokenizerPt","AggressiveTokenizerNo","AggressiveTokenizerSv","AggressiveTokenizerVi","AggressiveTokenizer","CaseTokenizer","RegexpTokenizer","OrthographyTokenizer","WordTokenizer","WordPunctTokenizer","TreebankWordTokenizer","TokenizerJa","SentenceTokenizer","BayesClassifier","LogisticRegressionClassifier","NounInflector","NounInflectorFr","NounInflectorJa","PresentVerbInflector","CountInflector","WordNet","TfIdf","Trie","SentenceAnalyzer","stopwords","words","ShortestPathTree","Spellcheck","LongestPathTree","EdgeWeightedDigraph","NGrams","NGramsZH","JaroWinklerDistance","LevenshteinDistance","DamerauLevenshteinDistance","DiceCoefficient","HammingDistance","normalize","normalize_tokens","normalize_ja","removeDiacritics","transliterate_ja","BrillPOSTagger","BrillPOSTrainer","BrillPOSTester","Lexicon","RuleSet","RuleTemplates","RuleTemplate","Corpus","MaxEntClassifier","Context","Feature","FeatureSet","Sample","Element","SE_Element","Sentence","GISScaler","POS_Element","ME_Sentence","ME_Corpus","SentimentAnalyzer"],"mappings":"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","sourcesContent":["/*\nCopyright (c) 2011, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nexports.SoundEx = require('./phonetics/soundex');\nexports.Metaphone = require('./phonetics/metaphone');\nexports.DoubleMetaphone = require('./phonetics/double_metaphone');\nexports.SoundExDM = require('./phonetics/dm_soundex');\nexports.PorterStemmer = require('./stemmers/porter_stemmer');\nexports.PorterStemmerFa = require('./stemmers/porter_stemmer_fa');\nexports.PorterStemmerFr = require('./stemmers/porter_stemmer_fr');\nexports.PorterStemmerRu = require('./stemmers/porter_stemmer_ru');\nexports.PorterStemmerEs = require('./stemmers/porter_stemmer_es');\nexports.PorterStemmerIt = require('./stemmers/porter_stemmer_it');\nexports.PorterStemmerNo = require('./stemmers/porter_stemmer_no');\nexports.PorterStemmerSv = require('./stemmers/porter_stemmer_sv');\nexports.PorterStemmerPt = require('./stemmers/porter_stemmer_pt');\nexports.PorterStemmerNl = require('./stemmers/porter_stemmer_nl');\nexports.LancasterStemmer = require('./stemmers/lancaster_stemmer');\n// StemmerFr and StemmerPl are not stemmers. A Polish stemmer is\n// not available, and for French PorterStemmerFr should be used.\n//exports.StemmerFr = require('./stemmers/stemmer_fr');\n//exports.StemmerPl = require('./stemmers/stemmer_pl');\nexports.StemmerJa = require('./stemmers/stemmer_ja');\nexports.StemmerId = require('./stemmers/indonesian/stemmer_id');\nexports.AggressiveTokenizerNl = require('./tokenizers/aggressive_tokenizer_nl');\nexports.AggressiveTokenizerFa = require('./tokenizers/aggressive_tokenizer_fa');\nexports.AggressiveTokenizerFr = require('./tokenizers/aggressive_tokenizer_fr');\nexports.AggressiveTokenizerRu = require('./tokenizers/aggressive_tokenizer_ru');\nexports.AggressiveTokenizerEs = require('./tokenizers/aggressive_tokenizer_es');\nexports.AggressiveTokenizerIt = require('./tokenizers/aggressive_tokenizer_it');\nexports.AggressiveTokenizerPl = require('./tokenizers/aggressive_tokenizer_pl');\nexports.AggressiveTokenizerPt = require('./tokenizers/aggressive_tokenizer_pt');\nexports.AggressiveTokenizerNo = require('./tokenizers/aggressive_tokenizer_no');\nexports.AggressiveTokenizerSv = require('./tokenizers/aggressive_tokenizer_sv');\nexports.AggressiveTokenizerVi = require('./tokenizers/aggressive_tokenizer_vi');\nexports.AggressiveTokenizer = require('./tokenizers/aggressive_tokenizer');\nexports.CaseTokenizer = require('./tokenizers/tokenizer_case');\nexports.RegexpTokenizer = require('./tokenizers/regexp_tokenizer').RegexpTokenizer;\nexports.OrthographyTokenizer = require('./tokenizers/regexp_tokenizer').OrthographyTokenizer;\nexports.WordTokenizer = require('./tokenizers/regexp_tokenizer').WordTokenizer;\nexports.WordPunctTokenizer = require('./tokenizers/regexp_tokenizer').WordPunctTokenizer;\nexports.TreebankWordTokenizer = require('./tokenizers/treebank_word_tokenizer');\nexports.TokenizerJa = require('./tokenizers/tokenizer_ja');\nexports.SentenceTokenizer = require('./tokenizers/sentence_tokenizer');\nexports.BayesClassifier = require('./classifiers/bayes_classifier');\nexports.LogisticRegressionClassifier = require('./classifiers/logistic_regression_classifier');\nexports.NounInflector = require('./inflectors/noun_inflector');\nexports.NounInflectorFr = require('./inflectors/fr/noun_inflector');\nexports.NounInflectorJa = require('./inflectors/ja/noun_inflector');\nexports.PresentVerbInflector = require('./inflectors/present_verb_inflector');\nexports.CountInflector = require('./inflectors/count_inflector');\nexports.WordNet = require('./wordnet/wordnet');\nexports.TfIdf = require('./tfidf/tfidf');\nexports.Trie = require('./trie/trie');\nexports.SentenceAnalyzer = require('./analyzers/sentence_analyzer');\nexports.stopwords = require('./util/stopwords').words;\nexports.ShortestPathTree = require('./util/shortest_path_tree');\nexports.Spellcheck = require('./spellcheck/spellcheck');\nexports.LongestPathTree = require('./util/longest_path_tree');\nexports.EdgeWeightedDigraph = require('./util/edge_weighted_digraph');\nexports.NGrams = require('./ngrams/ngrams');\nexports.NGramsZH = require('./ngrams/ngrams_zh');\nexports.JaroWinklerDistance = require('./distance/jaro-winkler_distance');\nexports.LevenshteinDistance = require('./distance/levenshtein_distance').LevenshteinDistance;\nexports.DamerauLevenshteinDistance = require('./distance/levenshtein_distance').DamerauLevenshteinDistance;\nexports.DiceCoefficient = require('./distance/dice_coefficient');\nexports.HammingDistance = require('./distance/hamming_distance');\nexports.normalize = require('./normalizers/normalizer').normalize_tokens;\nexports.normalize_ja = require('./normalizers/normalizer_ja').normalize_ja;\nexports.removeDiacritics = require('./normalizers/remove_diacritics');\nexports.transliterate_ja = require('./transliterators/ja');\nexports.BrillPOSTagger = require('./brill_pos_tagger/lib/Brill_POS_Tagger');\nexports.BrillPOSTrainer = require('./brill_pos_tagger/lib/Brill_POS_Trainer');\nexports.BrillPOSTester = require('./brill_pos_tagger/lib/Brill_POS_Tester');\nexports.Lexicon = require('./brill_pos_tagger/lib/Lexicon');\nexports.RuleSet = require('./brill_pos_tagger/lib/RuleSet');\nexports.RuleTemplates = require('./brill_pos_tagger/lib/RuleTemplates');\nexports.RuleTemplate = require('./brill_pos_tagger/lib/RuleTemplate');\nexports.Corpus = require('./brill_pos_tagger/lib/Corpus');\nexports.MaxEntClassifier = require('./classifiers/maxent/Classifier');\nexports.Context = require('./classifiers/maxent/Context');\nexports.Feature = require('./classifiers/maxent/Feature');\nexports.FeatureSet = require('./classifiers/maxent/FeatureSet');\nexports.Sample = require('./classifiers/maxent/Sample');\nexports.Element = require('./classifiers/maxent/Element');\nexports.SE_Element = require('./classifiers/maxent/SimpleExample/SE_Element');\nexports.Sentence = require('./brill_pos_tagger/lib/Sentence');\nexports.GISScaler = require('./classifiers/maxent/GISScaler');\nexports.POS_Element = require('./classifiers/maxent/POS/POS_Element');\nexports.ME_Sentence = require('./classifiers/maxent/POS/ME_Sentence');\nexports.ME_Corpus = require('./classifiers/maxent/POS/ME_Corpus');\nexports.SentimentAnalyzer = require('./sentiment/SentimentAnalyzer');"]},"metadata":{},"sourceType":"script"}