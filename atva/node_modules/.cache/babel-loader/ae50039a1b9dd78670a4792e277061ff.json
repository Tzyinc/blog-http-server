{"ast":null,"code":"var _jsxFileName = \"/Users/tenzy/Documents/work/vata-hackathon-fe/atva/src/components/Body/components/MainContainer/index.js\";\nimport React, { Component } from \"react\";\nimport cx from \"classnames\";\nimport Section from \"./Section\";\nimport \"./style.css\";\n\nclass MainContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDetail = () => {\n      const showRaw = this.state.showRaw;\n      this.setState({\n        showRaw: !showRaw\n      });\n    };\n\n    this.handleChangeFilter = e => {\n      const filterText = e.target.value;\n      this.setState({\n        filterText\n      });\n    };\n\n    this.state = {\n      showRaw: true,\n      filterText: \"\"\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          sections = _this$props.sections,\n          deleteSection = _this$props.deleteSection,\n          editSection = _this$props.editSection,\n          saveSection = _this$props.saveSection,\n          onSaveTagsClick = _this$props.onSaveTagsClick;\n    const _this$state = this.state,\n          showRaw = _this$state.showRaw,\n          filterText = _this$state.filterText;\n    return React.createElement(\"div\", {\n      className: \"sections-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sections-container__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"sections-container__header-input\",\n      placeholder: \"Filter ...\",\n      onChange: this.handleChangeFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: cx(\"button sections-container__header-toggle\", {\n        \"button-disabled\": showRaw\n      }),\n      onClick: this.toggleDetail,\n      disabled: showRaw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Original Text\"), React.createElement(\"button\", {\n      className: cx(\"button sections-container__header-toggle\", {\n        \"button-disabled\": !showRaw\n      }),\n      onClick: this.toggleDetail,\n      disabled: !showRaw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Summary\"))), sections && sections.length > 0 && sections.filter(section => {\n      let found = true;\n\n      if (filterText.length > 0) {\n        found = false;\n\n        for (let tagIndex in section.tags) {\n          if (section.tags[tagIndex].indexOf(filterText) !== -1) {\n            found = true;\n          }\n        }\n      }\n\n      return found;\n    }).map(section => React.createElement(Section, {\n      section: section,\n      deleteSection: deleteSection,\n      editSection: editSection,\n      saveSection: saveSection,\n      key: section.sectionId,\n      onSaveTagsClick: onSaveTagsClick,\n      showRaw: showRaw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MainContainer;","map":{"version":3,"sources":["/Users/tenzy/Documents/work/vata-hackathon-fe/atva/src/components/Body/components/MainContainer/index.js"],"names":["React","Component","cx","Section","MainContainer","constructor","props","toggleDetail","showRaw","state","setState","handleChangeFilter","e","filterText","target","value","render","sections","deleteSection","editSection","saveSection","onSaveTagsClick","length","filter","section","found","tagIndex","tags","indexOf","map","sectionId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport cx from \"classnames\";\nimport Section from \"./Section\";\nimport \"./style.css\";\nclass MainContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showRaw: true,\n      filterText: \"\"\n    };\n  }\n\n  toggleDetail = () => {\n    const { showRaw } = this.state;\n    this.setState({ showRaw: !showRaw });\n  };\n\n  handleChangeFilter = e => {\n    const filterText = e.target.value;\n    this.setState({ filterText });\n  };\n\n  render() {\n    const {\n      sections,\n      deleteSection,\n      editSection,\n      saveSection,\n      onSaveTagsClick\n    } = this.props;\n    const { showRaw, filterText } = this.state;\n    return (\n      <div className=\"sections-container\">\n        <div className=\"sections-container__header\">\n          <input\n            type=\"text\"\n            className=\"sections-container__header-input\"\n            placeholder=\"Filter ...\"\n            onChange={this.handleChangeFilter}\n          />\n          <div>\n            <button\n              className={cx(\"button sections-container__header-toggle\", {\n                \"button-disabled\": showRaw\n              })}\n              onClick={this.toggleDetail}\n              disabled={showRaw}\n            >\n              Original Text\n            </button>\n            <button\n              className={cx(\"button sections-container__header-toggle\", {\n                \"button-disabled\": !showRaw\n              })}\n              onClick={this.toggleDetail}\n              disabled={!showRaw}\n            >\n              Summary\n            </button>\n          </div>\n        </div>\n        {sections &&\n          sections.length > 0 &&\n          sections\n            .filter(section => {\n              let found = true;\n              if (filterText.length > 0) {\n                found = false;\n                for (let tagIndex in section.tags) {\n                  if (section.tags[tagIndex].indexOf(filterText) !== -1) {\n                    found = true;\n                  }\n                }\n              }\n              return found;\n            })\n            .map(section => (\n              <Section\n                section={section}\n                deleteSection={deleteSection}\n                editSection={editSection}\n                saveSection={saveSection}\n                key={section.sectionId}\n                onSaveTagsClick={onSaveTagsClick}\n                showRaw={showRaw}\n              />\n            ))}\n      </div>\n    );\n  }\n}\n\nexport default MainContainer;\n"]},"metadata":{},"sourceType":"module"}