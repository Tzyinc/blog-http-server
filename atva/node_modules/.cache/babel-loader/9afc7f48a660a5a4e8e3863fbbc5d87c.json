{"ast":null,"code":"/*\n  Simple Example Element class\n  Copyright (C) 2018 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar util = require('util');\n\nvar Element = require('../Element');\n\nvar Feature = require('../Feature');\n\nfunction SE_Element(a, b) {\n  SE_Element.super_.call(this, a, b);\n}\n\nutil.inherits(SE_Element, Element);\n\nSE_Element.prototype.generateFeatures = function (featureSet) {\n  function isZero(x) {\n    if (x.a === \"x\" && x.b.data === \"0\") {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  featureSet.addFeature(new Feature(isZero, \"isZero\", [\"0\"]));\n\n  function isOne(x) {\n    if (x.a === \"y\" && x.b.data === \"1\") {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  featureSet.addFeature(new Feature(isOne, \"isOne\", [\"1\"]));\n};\n\nmodule.exports = SE_Element;","map":{"version":3,"sources":["/Users/tenzy/Documents/work/vata-hackathon-fe/atva/node_modules/natural/lib/natural/classifiers/maxent/SimpleExample/SE_Element.js"],"names":["util","require","Element","Feature","SE_Element","a","b","super_","call","inherits","prototype","generateFeatures","featureSet","isZero","x","data","addFeature","isOne","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAkBA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,YAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,YAAD,CAArB;;AAEA,SAASG,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AACvBF,EAAAA,UAAU,CAACG,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6BH,CAA7B,EAAgCC,CAAhC;AACF;;AAEDN,IAAI,CAACS,QAAL,CAAcL,UAAd,EAA0BF,OAA1B;;AAEAE,UAAU,CAACM,SAAX,CAAqBC,gBAArB,GAAwC,UAASC,UAAT,EAAqB;AAE3D,WAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACjB,QAAKA,CAAC,CAACT,CAAF,KAAQ,GAAT,IAAkBS,CAAC,CAACR,CAAF,CAAIS,IAAJ,KAAa,GAAnC,EAAyC;AACvC,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD;;AACDH,EAAAA,UAAU,CAACI,UAAX,CAAsB,IAAIb,OAAJ,CAAYU,MAAZ,EAAoB,QAApB,EAA8B,CAAC,GAAD,CAA9B,CAAtB;;AAEA,WAASI,KAAT,CAAeH,CAAf,EAAkB;AAChB,QAAKA,CAAC,CAACT,CAAF,KAAQ,GAAT,IAAkBS,CAAC,CAACR,CAAF,CAAIS,IAAJ,KAAa,GAAnC,EAAyC;AACvC,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD;;AACDH,EAAAA,UAAU,CAACI,UAAX,CAAsB,IAAIb,OAAJ,CAAYc,KAAZ,EAAmB,OAAnB,EAA4B,CAAC,GAAD,CAA5B,CAAtB;AACD,CAjBD;;AAmBAC,MAAM,CAACC,OAAP,GAAiBf,UAAjB","sourcesContent":["/*\n  Simple Example Element class\n  Copyright (C) 2018 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nvar util = require('util');\n\nvar Element = require('../Element');\nvar Feature = require('../Feature');\n\nfunction SE_Element(a, b) {\n   SE_Element.super_.call(this, a, b);\n}\n\nutil.inherits(SE_Element, Element);\n\nSE_Element.prototype.generateFeatures = function(featureSet) {\n\n  function isZero(x) {\n    if ((x.a === \"x\") && (x.b.data === \"0\")) {\n      return 1;\n    }\n    return 0;\n  }\n  featureSet.addFeature(new Feature(isZero, \"isZero\", [\"0\"]));\n\n  function isOne(x) {\n    if ((x.a === \"y\") && (x.b.data === \"1\")) {\n      return 1;\n    }\n    return 0;\n  }\n  featureSet.addFeature(new Feature(isOne, \"isOne\", [\"1\"]));\n};\n\nmodule.exports = SE_Element;\n"]},"metadata":{},"sourceType":"script"}