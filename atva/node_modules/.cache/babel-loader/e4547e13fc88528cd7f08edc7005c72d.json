{"ast":null,"code":"/*\n  Predicates for the Brill tagger\n  Copyright (C) 2017 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n//var log4js = require('log4js');\n//var logger = log4js.getLogger();\n//logger.setLevel('INFO');\nvar predicates = require(\"./RuleTemplates\"); //logger.debug(predicates);\n\n\nfunction Predicate(name, parameter1, parameter2) {\n  this.name = name;\n  this.meta = predicates[name];\n\n  if (!this.meta) {\n    this.meta = predicates[\"DEFAULT\"];\n  } //if (this.meta.nrParameters > 0) {\n\n\n  this.parameter1 = parameter1; //}\n  //if (this.meta.nrParameters > 1) {\n\n  this.parameter2 = parameter2; //}\n  //logger.debug('Predicate\\n' + JSON.toString(this.meta, null, 2));\n}\n\nPredicate.prototype.evaluate = function (sentence, position) {\n  //logger.debug('Predicate.evalute ' + this.name);\n  var predicate = this.meta.function;\n  return predicate(sentence, position, this.parameter1, this.parameter2);\n};\n\nmodule.exports = Predicate;","map":{"version":3,"sources":["/Users/tenzy/Documents/work/vata-hackathon-fe/atva/node_modules/natural/lib/natural/brill_pos_tagger/lib/Predicate.js"],"names":["predicates","require","Predicate","name","parameter1","parameter2","meta","prototype","evaluate","sentence","position","predicate","function","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,iBAAD,CAAxB,C,CACA;;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,UAArC,EAAiD;AAC/C,OAAKF,IAAL,GAAYA,IAAZ;AACA,OAAKG,IAAL,GAAYN,UAAU,CAACG,IAAD,CAAtB;;AACA,MAAI,CAAC,KAAKG,IAAV,EAAgB;AACd,SAAKA,IAAL,GAAYN,UAAU,CAAC,SAAD,CAAtB;AACD,GAL8C,CAM/C;;;AACE,OAAKI,UAAL,GAAkBA,UAAlB,CAP6C,CAQ/C;AACA;;AACE,OAAKC,UAAL,GAAkBA,UAAlB,CAV6C,CAW/C;AACA;AACD;;AAEDH,SAAS,CAACK,SAAV,CAAoBC,QAApB,GAA+B,UAASC,QAAT,EAAmBC,QAAnB,EAA6B;AAC1D;AACA,MAAIC,SAAS,GAAG,KAAKL,IAAL,CAAUM,QAA1B;AACA,SAAQD,SAAS,CAACF,QAAD,EAAWC,QAAX,EAAqB,KAAKN,UAA1B,EAAsC,KAAKC,UAA3C,CAAjB;AACD,CAJD;;AAMAQ,MAAM,CAACC,OAAP,GAAiBZ,SAAjB","sourcesContent":["/*\n  Predicates for the Brill tagger\n  Copyright (C) 2017 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n//var log4js = require('log4js');\n//var logger = log4js.getLogger();\n//logger.setLevel('INFO');\n\nvar predicates = require(\"./RuleTemplates\");\n//logger.debug(predicates);\n\nfunction Predicate(name, parameter1, parameter2) {\n  this.name = name;\n  this.meta = predicates[name];\n  if (!this.meta) {\n    this.meta = predicates[\"DEFAULT\"];\n  }\n  //if (this.meta.nrParameters > 0) {\n    this.parameter1 = parameter1;\n  //}\n  //if (this.meta.nrParameters > 1) {\n    this.parameter2 = parameter2;\n  //}\n  //logger.debug('Predicate\\n' + JSON.toString(this.meta, null, 2));\n}\n\nPredicate.prototype.evaluate = function(sentence, position) {\n  //logger.debug('Predicate.evalute ' + this.name);\n  var predicate = this.meta.function;\n  return (predicate(sentence, position, this.parameter1, this.parameter2));\n};\n\nmodule.exports = Predicate;\n"]},"metadata":{},"sourceType":"script"}