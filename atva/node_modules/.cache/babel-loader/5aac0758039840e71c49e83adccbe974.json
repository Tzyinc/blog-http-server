{"ast":null,"code":"/*\n  Corpus class specific for MaxEnt modeling\n  Copyright (C) 2018 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar util = require('util');\n\nvar Sample = require('../Sample');\n\nvar Corpus = require('../../../brill_pos_tagger/lib/Corpus');\n\nfunction ME_Corpus(data, BROWN, SentenceClass) {\n  ME_Corpus.super_.call(this, data, BROWN, SentenceClass);\n}\n\nutil.inherits(ME_Corpus, Corpus);\n\nME_Corpus.prototype.generateSample = function () {\n  var sample = new Sample([]);\n  this.sentences.forEach(function (sentence) {\n    sentence.generateSampleElements(sample);\n  });\n  return sample;\n}; // Splits the corpus in a training and testing set.\n// percentageTrain is the size of the training corpus in percent\n// Returns an array with two elements: training corpus, testing corpus\n\n\nME_Corpus.prototype.splitInTrainAndTest = function (percentageTrain) {\n  var corpusTrain = new ME_Corpus();\n  var corpusTest = new ME_Corpus();\n  var p = percentageTrain / 100;\n  this.sentences.forEach(function (sentence, i) {\n    if (Math.random() < p) {\n      corpusTrain.sentences.push(sentence);\n    } else {\n      corpusTest.sentences.push(sentence);\n    }\n  });\n  return [corpusTrain, corpusTest];\n};\n\nmodule.exports = ME_Corpus;","map":{"version":3,"sources":["/Users/tenzy/Documents/work/vata-hackathon-fe/atva/node_modules/natural/lib/natural/classifiers/maxent/POS/ME_Corpus.js"],"names":["util","require","Sample","Corpus","ME_Corpus","data","BROWN","SentenceClass","super_","call","inherits","prototype","generateSample","sample","sentences","forEach","sentence","generateSampleElements","splitInTrainAndTest","percentageTrain","corpusTrain","corpusTest","p","i","Math","random","push","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAkBA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,sCAAD,CAApB;;AAEA,SAASG,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+C;AAC5CH,EAAAA,SAAS,CAACI,MAAV,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4BJ,IAA5B,EAAkCC,KAAlC,EAAyCC,aAAzC;AACF;;AAEDP,IAAI,CAACU,QAAL,CAAcN,SAAd,EAAyBD,MAAzB;;AAEAC,SAAS,CAACO,SAAV,CAAoBC,cAApB,GAAqC,YAAW;AAC9C,MAAIC,MAAM,GAAG,IAAIX,MAAJ,CAAW,EAAX,CAAb;AACA,OAAKY,SAAL,CAAeC,OAAf,CAAuB,UAASC,QAAT,EAAmB;AACxCA,IAAAA,QAAQ,CAACC,sBAAT,CAAgCJ,MAAhC;AACD,GAFD;AAGA,SAAOA,MAAP;AACD,CAND,C,CAQA;AACA;AACA;;;AACAT,SAAS,CAACO,SAAV,CAAoBO,mBAApB,GAA0C,UAASC,eAAT,EAA0B;AAClE,MAAIC,WAAW,GAAG,IAAIhB,SAAJ,EAAlB;AACA,MAAIiB,UAAU,GAAG,IAAIjB,SAAJ,EAAjB;AAEA,MAAIkB,CAAC,GAAGH,eAAe,GAAG,GAA1B;AACA,OAAKL,SAAL,CAAeC,OAAf,CAAuB,UAASC,QAAT,EAAmBO,CAAnB,EAAsB;AAC3C,QAAIC,IAAI,CAACC,MAAL,KAAgBH,CAApB,EAAuB;AACrBF,MAAAA,WAAW,CAACN,SAAZ,CAAsBY,IAAtB,CAA2BV,QAA3B;AACD,KAFD,MAGK;AACHK,MAAAA,UAAU,CAACP,SAAX,CAAqBY,IAArB,CAA0BV,QAA1B;AACD;AACF,GAPD;AAQA,SAAO,CAACI,WAAD,EAAcC,UAAd,CAAP;AACD,CAdD;;AAgBAM,MAAM,CAACC,OAAP,GAAiBxB,SAAjB","sourcesContent":["/*\n  Corpus class specific for MaxEnt modeling\n  Copyright (C) 2018 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nvar util = require('util');\nvar Sample = require('../Sample');\nvar Corpus = require('../../../brill_pos_tagger/lib/Corpus');\n\nfunction ME_Corpus(data, BROWN, SentenceClass) {\n   ME_Corpus.super_.call(this, data, BROWN, SentenceClass);\n}\n\nutil.inherits(ME_Corpus, Corpus);\n\nME_Corpus.prototype.generateSample = function() {\n  var sample = new Sample([]);\n  this.sentences.forEach(function(sentence) {\n    sentence.generateSampleElements(sample);\n  });\n  return sample;\n};\n\n// Splits the corpus in a training and testing set.\n// percentageTrain is the size of the training corpus in percent\n// Returns an array with two elements: training corpus, testing corpus\nME_Corpus.prototype.splitInTrainAndTest = function(percentageTrain) {\n  var corpusTrain = new ME_Corpus();\n  var corpusTest = new ME_Corpus();\n\n  var p = percentageTrain / 100;\n  this.sentences.forEach(function(sentence, i) {\n    if (Math.random() < p) {\n      corpusTrain.sentences.push(sentence);\n    }\n    else {\n      corpusTest.sentences.push(sentence);\n    }\n  });\n  return [corpusTrain, corpusTest];\n};\n\nmodule.exports = ME_Corpus;\n"]},"metadata":{},"sourceType":"script"}