{"ast":null,"code":"import _objectSpread from \"/Users/tenzy/Documents/work/vata-hackathon-fe/atva/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/tenzy/Documents/work/vata-hackathon-fe/atva/src/components/Body/index.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport SideBar from \"./components/SideBar\";\nimport MainContainer from \"./components/MainContainer\";\nimport { parseQueryStringToObj } from \"../../utils\";\nimport { initUrlDocument } from \"../../utils/fetch\";\nimport jsonpack from \"jsonpack/main\";\nimport withS2T from \"../Utils/Speech2Text\";\nimport { getDocument, createSection, setText, setTags, deleteSection, generateTags } from \"../../utils/fetch\";\nimport \"./style.css\";\n\nclass Body extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.editSection = (sectionId, text) => {\n      if (sectionId && text) {\n        const index = this.state.sections.findIndex(section => section.sectionId === sectionId);\n        const frontSections = this.state.sections.slice(0, index);\n        const backSections = this.state.sections.slice(index + 1, this.state.sections.length);\n        this.setState({\n          sections: [...frontSections, _objectSpread({}, this.state.sections[index], {\n            text\n          }), ...backSections]\n        });\n      }\n    };\n\n    this.saveSection = sectionId => {\n      const sections = this.state.sections;\n      const currentSection = sections.find(section => section.sectionId === sectionId);\n\n      if (currentSection) {\n        setText(sectionId, currentSection.text).then(data => {\n          const summary = data && data.summary;\n\n          if (summary) {\n            this.setSectionSummary(sectionId, summary);\n          }\n        });\n      }\n\n      this.setAllTags();\n    };\n\n    this.getDocumentIdFromUrl = givenProps => {\n      const props = givenProps || this.props;\n      return parseQueryStringToObj(props.location.search).id;\n    };\n\n    this.setDocumentId = id => {\n      this.setState({\n        documentId: id\n      });\n    };\n\n    this.setSectionSummary = (sectionId, summary) => {\n      const sections = this.state.sections;\n      const orderIndex = sections.findIndex(section => section.sectionId === sectionId);\n      const topSections = sections.slice(0, orderIndex);\n      const bottomSections = sections.slice(orderIndex + 1, sections.length);\n      this.setState({\n        sections: [...topSections, _objectSpread({}, sections[orderIndex], {\n          summary\n        }), ...bottomSections]\n      });\n    };\n\n    this.setAllTags = () => {\n      generateTags(this.state.documentId).then(data => {\n        const currentSections = this.state.sections;\n        this.setState({\n          sections: currentSections.map((section, index) => {\n            // console.log('setalltagcallback', section , data.sections, data.sections[section.id], section.id )\n            const sectionTags = data.sections[section.sectionId] ? data.sections[section.sectionId].tags : [];\n\n            if (sectionTags) {\n              return _objectSpread({}, section, {\n                tags: sectionTags\n              });\n            } else {\n              return section;\n            }\n          })\n        });\n      });\n    };\n\n    this.handleStartRecording = () => {\n      this.setState({\n        isRecording: true\n      });\n      this.createSection();\n      this.props.startRecord();\n    };\n\n    this.handleRecordNext = () => {\n      this.saveSection(this.state.currentSectionId);\n      this.handleStartRecording();\n    };\n\n    this.handleStopRecording = () => {\n      this.saveSection(this.state.currentSectionId);\n      this.props.stopRecord();\n      this.setState({\n        isRecording: false\n      }, this.setAllTags);\n    };\n\n    this.handleChangeDocTitle = title => {\n      this.setState({\n        documentTitle: title\n      });\n    };\n\n    this.handleSaveTagsClick = (sectionId, newTags) => {\n      const section = this.state.sections.find(s => s.sectionId === sectionId);\n\n      if (section && newTags) {\n        setTags(sectionId, newTags);\n      }\n    };\n\n    const queryString = _props.location.search;\n    const query = parseQueryStringToObj(queryString);\n    let defaultState = {\n      sections: [],\n      currentSectionId: 0,\n      lastRecordedTranscript: \"\",\n      documentId: query.id || null,\n      documentTitle: \"\",\n      isRecording: false\n    };\n\n    if (query && query.d) {\n      const doc = jsonpack.unpack(query.d);\n      const keys = Object.keys(doc);\n      const item = doc[keys[0]];\n      defaultState.sections = JSON.parse(JSON.stringify(item.sections));\n      defaultState.sections.shift();\n      defaultState.currentSectionId = item.sections.length;\n      defaultState.documentId = item.title;\n      defaultState.documentTitle = item.title;\n      initUrlDocument({\n        [keys[0]]: item\n      });\n    }\n\n    this.deleteSection = this.deleteSection.bind(this);\n    this.state = defaultState;\n  }\n\n  deleteSection(sectionId) {\n    const sections = this.state.sections;\n    const deletedSection = sections.find(section => section.sectionId === sectionId);\n\n    if (sectionId && deletedSection) {\n      deleteSection(sectionId);\n      this.setState({\n        sections: sections.filter(section => section.sectionId !== sectionId)\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const urlDocumentId = this.getDocumentIdFromUrl(nextProps);\n\n    if (nextProps.documentId !== urlDocumentId) {\n      this.setDocumentId(urlDocumentId);\n    }\n\n    if (nextProps.lastRecordedTranscript !== this.state.lastRecordedTranscript) {\n      this.setState({\n        lastRecordedTranscript: nextProps.lastRecordedTranscript\n      });\n\n      if (this.state.sections.length === 0) {\n        this.createSection();\n      } else {\n        this.updateSectionText(this.state.currentSectionId, nextProps.lastRecordedTranscript);\n      }\n    }\n  }\n\n  componentDidMount() {\n    const documentId = this.state.documentId;\n\n    if (documentId) {\n      getDocument(documentId).then(data => {\n        const sections = data && data.sections;\n        const title = data && data.title;\n\n        if (sections && title) {\n          this.setState({\n            documentTitle: title,\n            sections: sections.map(section => ({\n              sectionId: section.id,\n              summary: section.summary,\n              text: section.text,\n              timestamp: section.timestamp,\n              tags: section.tags\n            }))\n          });\n        }\n      });\n    }\n  }\n\n  createSection() {\n    const documentId = this.state.documentId;\n\n    if (documentId) {\n      createSection(documentId).then(data => {\n        const sectionId = data && data.id;\n        const timestamp = data && data.timestamp;\n\n        if (sectionId) {\n          this.setState({\n            sections: [...this.state.sections, {\n              text: \"\",\n              sectionId,\n              timestamp\n            }],\n            currentSectionId: sectionId\n          });\n        }\n      });\n    }\n  }\n\n  updateSectionText(sectionId, text) {\n    if (sectionId && text) {\n      const oldSections = Array.from(this.state.sections);\n      const lastSection = oldSections[oldSections.length - 1];\n\n      if (lastSection.sectionId === sectionId) {\n        this.setState({\n          sections: [...oldSections.slice(0, -1), _objectSpread({}, lastSection, {\n            text: `${lastSection.text}${text}`\n          })]\n        });\n      }\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          documentId = _this$state.documentId,\n          documentTitle = _this$state.documentTitle,\n          isRecording = _this$state.isRecording,\n          sections = _this$state.sections;\n    return React.createElement(\"div\", {\n      className: \"main-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(SideBar, {\n      onChangeDocumentTitle: this.handleChangeDocTitle,\n      documentId: documentId,\n      documentTitle: documentTitle,\n      isRecording: isRecording,\n      onStartRecording: this.handleStartRecording,\n      onStopRecording: this.handleStopRecording,\n      handleRecordNext: this.handleRecordNext,\n      setDocumentId: this.setDocumentId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(MainContainer, {\n      sections: sections,\n      deleteSection: this.deleteSection,\n      editSection: this.editSection,\n      saveSection: this.saveSection,\n      onSaveTagsClick: this.handleSaveTagsClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withS2T(withRouter(Body));","map":{"version":3,"sources":["/Users/tenzy/Documents/work/vata-hackathon-fe/atva/src/components/Body/index.js"],"names":["React","Component","withRouter","SideBar","MainContainer","parseQueryStringToObj","initUrlDocument","jsonpack","withS2T","getDocument","createSection","setText","setTags","deleteSection","generateTags","Body","constructor","props","editSection","sectionId","text","index","state","sections","findIndex","section","frontSections","slice","backSections","length","setState","saveSection","currentSection","find","then","data","summary","setSectionSummary","setAllTags","getDocumentIdFromUrl","givenProps","location","search","id","setDocumentId","documentId","orderIndex","topSections","bottomSections","currentSections","map","sectionTags","tags","handleStartRecording","isRecording","startRecord","handleRecordNext","currentSectionId","handleStopRecording","stopRecord","handleChangeDocTitle","title","documentTitle","handleSaveTagsClick","newTags","s","queryString","query","defaultState","lastRecordedTranscript","d","doc","unpack","keys","Object","item","JSON","parse","stringify","shift","bind","deletedSection","filter","componentWillReceiveProps","nextProps","urlDocumentId","updateSectionText","componentDidMount","timestamp","oldSections","Array","from","lastSection","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport SideBar from \"./components/SideBar\";\nimport MainContainer from \"./components/MainContainer\";\n\nimport { parseQueryStringToObj } from \"../../utils\";\n\nimport { initUrlDocument } from \"../../utils/fetch\";\n\nimport jsonpack from \"jsonpack/main\";\n\nimport withS2T from \"../Utils/Speech2Text\";\nimport {\n  getDocument,\n  createSection,\n  setText,\n  setTags,\n  deleteSection,\n  generateTags\n} from \"../../utils/fetch\";\n\nimport \"./style.css\";\n\nclass Body extends Component {\n  constructor(props) {\n    super(props);\n    const queryString = props.location.search;\n    const query = parseQueryStringToObj(queryString);\n\n    let defaultState = {\n      sections: [],\n      currentSectionId: 0,\n      lastRecordedTranscript: \"\",\n      documentId: query.id || null,\n      documentTitle: \"\",\n      isRecording: false\n    };\n\n    if (query && query.d) {\n      const doc = jsonpack.unpack(query.d);\n      const keys = Object.keys(doc);\n      const item = doc[keys[0]];\n      defaultState.sections = JSON.parse(JSON.stringify(item.sections));\n      defaultState.sections.shift();\n      defaultState.currentSectionId = item.sections.length;\n      defaultState.documentId = item.title;\n      defaultState.documentTitle = item.title;\n      initUrlDocument({[keys[0]]: item})\n    }\n    this.deleteSection = this.deleteSection.bind(this);\n    this.state = defaultState;\n  }\n\n  deleteSection(sectionId) {\n    const { sections } = this.state;\n    const deletedSection = sections.find(\n      section => section.sectionId === sectionId\n    );\n\n    if (sectionId && deletedSection) {\n      deleteSection(sectionId);\n      this.setState({\n        sections: sections.filter(section => section.sectionId !== sectionId)\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const urlDocumentId = this.getDocumentIdFromUrl(nextProps);\n    if (nextProps.documentId !== urlDocumentId) {\n      this.setDocumentId(urlDocumentId);\n    }\n\n    if (\n      nextProps.lastRecordedTranscript !== this.state.lastRecordedTranscript\n    ) {\n      this.setState({\n        lastRecordedTranscript: nextProps.lastRecordedTranscript\n      });\n      if (this.state.sections.length === 0) {\n        this.createSection();\n      } else {\n        this.updateSectionText(\n          this.state.currentSectionId,\n          nextProps.lastRecordedTranscript\n        );\n      }\n    }\n  }\n\n  componentDidMount() {\n    const { documentId } = this.state;\n    if (documentId) {\n      getDocument(documentId).then(data => {\n        const sections = data && data.sections;\n        const title = data && data.title;\n        if (sections && title) {\n          this.setState({\n            documentTitle: title,\n            sections: sections.map(section => ({\n              sectionId: section.id,\n              summary: section.summary,\n              text: section.text,\n              timestamp: section.timestamp,\n              tags: section.tags\n            }))\n          });\n        }\n      });\n    }\n  }\n\n  createSection() {\n    const { documentId } = this.state;\n\n    if (documentId) {\n      createSection(documentId).then(data => {\n        const sectionId = data && data.id;\n        const timestamp = data && data.timestamp;\n\n        if (sectionId) {\n          this.setState({\n            sections: [\n              ...this.state.sections,\n              { text: \"\", sectionId, timestamp }\n            ],\n            currentSectionId: sectionId\n          });\n        }\n      });\n    }\n  }\n\n  updateSectionText(sectionId, text) {\n    if (sectionId && text) {\n      const oldSections = Array.from(this.state.sections);\n      const lastSection = oldSections[oldSections.length - 1];\n      if (lastSection.sectionId === sectionId) {\n        this.setState({\n          sections: [\n            ...oldSections.slice(0, -1),\n            {\n              ...lastSection,\n              text: `${lastSection.text}${text}`\n            }\n          ]\n        });\n      }\n    }\n  }\n\n  editSection = (sectionId, text) => {\n    if (sectionId && text) {\n      const index = this.state.sections.findIndex(\n        section => section.sectionId === sectionId\n      );\n      const frontSections = this.state.sections.slice(0, index);\n      const backSections = this.state.sections.slice(\n        index + 1,\n        this.state.sections.length\n      );\n      this.setState({\n        sections: [\n          ...frontSections,\n          {\n            ...this.state.sections[index],\n            text\n          },\n          ...backSections\n        ]\n      });\n    }\n  }\n\n  saveSection = (sectionId) => {\n    const { sections } = this.state;\n    const currentSection = sections.find(\n      section => section.sectionId === sectionId\n    );\n\n    if (currentSection) {\n      setText(sectionId, currentSection.text).then(data => {\n        const summary = data && data.summary;\n\n        if (summary) {\n          this.setSectionSummary(sectionId, summary);\n        }\n      });\n    }\n    this.setAllTags();\n  }\n\n  getDocumentIdFromUrl = givenProps => {\n    const props = givenProps || this.props;\n    return parseQueryStringToObj(props.location.search).id;\n  };\n\n  setDocumentId = id => {\n    this.setState({\n      documentId: id\n    });\n  };\n\n  setSectionSummary = (sectionId, summary) => {\n    const { sections } = this.state;\n    const orderIndex = sections.findIndex(\n      section => section.sectionId === sectionId\n    );\n    const topSections = sections.slice(0, orderIndex);\n    const bottomSections = sections.slice(orderIndex + 1, sections.length);\n\n    this.setState({\n      sections: [\n        ...topSections,\n        { ...sections[orderIndex], summary },\n        ...bottomSections\n      ]\n    });\n  };\n\n  setAllTags = () => {\n    generateTags(this.state.documentId).then(data => {\n      const currentSections = this.state.sections;\n      this.setState({\n        sections: currentSections.map((section, index) => {\n          // console.log('setalltagcallback', section , data.sections, data.sections[section.id], section.id )\n          const sectionTags = data.sections[section.sectionId] ? data.sections[section.sectionId].tags : [];\n          if (sectionTags) {\n            return {\n              ...section,\n              tags: sectionTags\n            };\n          } else {\n            return section;\n          }\n        })\n      });\n    });\n  };\n\n  handleStartRecording = () => {\n    this.setState({\n      isRecording: true\n    });\n    this.createSection();\n\n    this.props.startRecord();\n  };\n\n  handleRecordNext = () => {\n    this.saveSection(this.state.currentSectionId);\n\n    this.handleStartRecording();\n  };\n\n  handleStopRecording = () => {\n    this.saveSection(this.state.currentSectionId);\n    this.props.stopRecord();\n    this.setState(\n      {\n        isRecording: false\n      },\n      this.setAllTags\n    );\n  };\n\n  handleChangeDocTitle = title => {\n    this.setState({\n      documentTitle: title\n    });\n  };\n\n  handleSaveTagsClick = (sectionId, newTags) => {\n    const section = this.state.sections.find(s => s.sectionId === sectionId);\n\n    if (section && newTags) {\n      setTags(sectionId, newTags);\n    }\n  };\n\n  render() {\n    const { documentId, documentTitle, isRecording, sections } = this.state;\n\n    return (\n      <div className=\"main-body\">\n        <SideBar\n          onChangeDocumentTitle={this.handleChangeDocTitle}\n          documentId={documentId}\n          documentTitle={documentTitle}\n          isRecording={isRecording}\n          onStartRecording={this.handleStartRecording}\n          onStopRecording={this.handleStopRecording}\n          handleRecordNext={this.handleRecordNext}\n          setDocumentId={this.setDocumentId}\n        />\n        <MainContainer\n          sections={sections}\n          deleteSection={this.deleteSection}\n          editSection={this.editSection}\n          saveSection={this.saveSection}\n          onSaveTagsClick={this.handleSaveTagsClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withS2T(withRouter(Body));\n"]},"metadata":{},"sourceType":"module"}